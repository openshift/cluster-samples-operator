/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/openshift/cluster-version-operator/pkg/apis/operatorstatus.openshift.io/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterOperatorLister helps list ClusterOperators.
type ClusterOperatorLister interface {
	// List lists all ClusterOperators in the indexer.
	List(selector labels.Selector) (ret []*v1.ClusterOperator, err error)
	// ClusterOperators returns an object that can list and get ClusterOperators.
	ClusterOperators(namespace string) ClusterOperatorNamespaceLister
	ClusterOperatorListerExpansion
}

// clusterOperatorLister implements the ClusterOperatorLister interface.
type clusterOperatorLister struct {
	indexer cache.Indexer
}

// NewClusterOperatorLister returns a new ClusterOperatorLister.
func NewClusterOperatorLister(indexer cache.Indexer) ClusterOperatorLister {
	return &clusterOperatorLister{indexer: indexer}
}

// List lists all ClusterOperators in the indexer.
func (s *clusterOperatorLister) List(selector labels.Selector) (ret []*v1.ClusterOperator, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ClusterOperator))
	})
	return ret, err
}

// ClusterOperators returns an object that can list and get ClusterOperators.
func (s *clusterOperatorLister) ClusterOperators(namespace string) ClusterOperatorNamespaceLister {
	return clusterOperatorNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterOperatorNamespaceLister helps list and get ClusterOperators.
type ClusterOperatorNamespaceLister interface {
	// List lists all ClusterOperators in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.ClusterOperator, err error)
	// Get retrieves the ClusterOperator from the indexer for a given namespace and name.
	Get(name string) (*v1.ClusterOperator, error)
	ClusterOperatorNamespaceListerExpansion
}

// clusterOperatorNamespaceLister implements the ClusterOperatorNamespaceLister
// interface.
type clusterOperatorNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterOperators in the indexer for a given namespace.
func (s clusterOperatorNamespaceLister) List(selector labels.Selector) (ret []*v1.ClusterOperator, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ClusterOperator))
	})
	return ret, err
}

// Get retrieves the ClusterOperator from the indexer for a given namespace and name.
func (s clusterOperatorNamespaceLister) Get(name string) (*v1.ClusterOperator, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("clusteroperator"), name)
	}
	return obj.(*v1.ClusterOperator), nil
}
