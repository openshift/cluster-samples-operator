{
	"kind": "Template",
	"apiVersion": "v1",
	"metadata": {
		"name": "rhdm79-kieserver",
		"creationTimestamp": null,
		"annotations": {
			"description": "Application template for a managed KIE Server, for Red Hat Decision Manager 7.9 - Deprecated",
			"iconClass": "icon-jboss",
			"openshift.io/display-name": "Red Hat Decision Manager 7.9 managed KIE Server",
			"openshift.io/provider-display-name": "Red Hat, Inc.",
			"tags": "rhdm,decisionserver,jboss,kieserver",
			"template.openshift.io/bindable": "false",
			"template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en-us/red_hat_decision_manager/7.9/html/deploying_a_red_hat_decision_manager_7.9_managed_server_environment_on_red_hat_openshift_container_platform/",
			"template.openshift.io/long-description": "This template defines resources needed to execute Rules on Red Hat Decision Manager KIE server 7.9, including application deployment configuration, secure and insecure http communication. Template for Red Hat OpenShift Container Platform version 3.11. Deprecated since Red Hat Decision Manager version 7.5; consider using the Red Hat Business Automation Operator.",
			"template.openshift.io/support-url": "https://access.redhat.com",
			"version": "7.9"
		}
	},
	"message": "A new Red Hat Decision Manager KIE server application has been created in your project.\nThe username/password needed for accessing the application are stored in \"${CREDENTIALS_SECRET}\" secret as\nKIE_ADMIN_USER and KIE_ADMIN_PWD\n\nYou must create the secret named \"${CREDENTIALS_SECRET}\" containing the KIE_ADMIN_USER and KIE_ADMIN_PWD values and the secret named \"${KIE_SERVER_HTTPS_SECRET}\" containing the ${KIE_SERVER_HTTPS_KEYSTORE} file used for serving secure content.",
	"objects": [
		{
			"apiVersion": "v1",
			"kind": "ServiceAccount",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			}
		},
		{
			"apiVersion": "v1",
			"kind": "RoleBinding",
			"metadata": {
				"labels": {
					"application": "${APPLICATION_NAME}"
				},
				"name": "${APPLICATION_NAME}-kieserver-edit"
			},
			"roleRef": {
				"name": "edit"
			},
			"subjects": [
				{
					"kind": "ServiceAccount",
					"name": "${APPLICATION_NAME}-kieserver"
				}
			]
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "All the KIE server web server's ports."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"ports": [
					{
						"name": "http",
						"port": 8080,
						"targetPort": 8080
					},
					{
						"name": "https",
						"port": 8443,
						"targetPort": 8443
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver"
				},
				"sessionAffinity": "ClientIP",
				"sessionAffinityConfig": {
					"clientIP": {
						"timeoutSeconds": 3600
					}
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "Service",
			"metadata": {
				"annotations": {
					"description": "The JGroups ping port for clustering.",
					"service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver-ping"
			},
			"spec": {
				"clusterIP": "None",
				"ports": [
					{
						"name": "ping",
						"port": 8888,
						"targetPort": 8888
					}
				],
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "insecure-${APPLICATION_NAME}-kieserver-http",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for KIE server's http service.",
					"haproxy.router.openshift.io/balance": "source"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "insecure-${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"host": "${KIE_SERVER_HOSTNAME_HTTP}",
				"port": {
					"targetPort": "http"
				},
				"to": {
					"name": "${APPLICATION_NAME}-kieserver"
				}
			}
		},
		{
			"apiVersion": "v1",
			"id": "${APPLICATION_NAME}-kieserver-https",
			"kind": "Route",
			"metadata": {
				"annotations": {
					"description": "Route for KIE server's https service."
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"host": "${KIE_SERVER_HOSTNAME_HTTPS}",
				"port": {
					"targetPort": "https"
				},
				"tls": {
					"termination": "passthrough"
				},
				"to": {
					"name": "${APPLICATION_NAME}-kieserver"
				}
			}
		},
		{
			"apiVersion": "v1",
			"kind": "DeploymentConfig",
			"metadata": {
				"annotations": {
					"template.alpha.openshift.io/wait-for-ready": "true"
				},
				"labels": {
					"application": "${APPLICATION_NAME}",
					"service": "${APPLICATION_NAME}-kieserver",
					"services.server.kie.org/kie-server-id": "${APPLICATION_NAME}-kieserver"
				},
				"name": "${APPLICATION_NAME}-kieserver"
			},
			"spec": {
				"replicas": 1,
				"revisionHistoryLimit": 10,
				"selector": {
					"deploymentConfig": "${APPLICATION_NAME}-kieserver"
				},
				"strategy": {
					"rollingParams": {
						"maxSurge": "100%",
						"maxUnavailable": 0
					},
					"type": "Rolling"
				},
				"template": {
					"metadata": {
						"labels": {
							"application": "${APPLICATION_NAME}",
							"deploymentConfig": "${APPLICATION_NAME}-kieserver",
							"service": "${APPLICATION_NAME}-kieserver",
							"services.server.kie.org/kie-server-id": "${APPLICATION_NAME}-kieserver"
						},
						"name": "${APPLICATION_NAME}-kieserver"
					},
					"spec": {
						"containers": [
							{
								"env": [
									{
										"name": "WORKBENCH_SERVICE_NAME",
										"value": "${DECISION_CENTRAL_SERVICE}"
									},
									{
										"name": "KIE_ADMIN_USER",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_ADMIN_PWD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "KIE_SERVER_MODE",
										"value": "${KIE_SERVER_MODE}"
									},
									{
										"name": "KIE_MBEANS",
										"value": "${KIE_MBEANS}"
									},
									{
										"name": "DROOLS_SERVER_FILTER_CLASSES",
										"value": "${DROOLS_SERVER_FILTER_CLASSES}"
									},
									{
										"name": "PROMETHEUS_SERVER_EXT_DISABLED",
										"value": "${PROMETHEUS_SERVER_EXT_DISABLED}"
									},
									{
										"name": "KIE_SERVER_BYPASS_AUTH_USER",
										"value": "${KIE_SERVER_BYPASS_AUTH_USER}"
									},
									{
										"name": "KIE_SERVER_ID",
										"valueFrom": {
											"fieldRef": {
												"fieldPath": "metadata.labels['services.server.kie.org/kie-server-id']"
											}
										}
									},
									{
										"name": "KIE_SERVER_ROUTE_NAME",
										"value": "${APPLICATION_NAME}-kieserver"
									},
									{
										"name": "KIE_SERVER_CONTAINER_DEPLOYMENT",
										"value": "${KIE_SERVER_CONTAINER_DEPLOYMENT}"
									},
									{
										"name": "MAVEN_MIRROR_URL",
										"value": "${MAVEN_MIRROR_URL}"
									},
									{
										"name": "MAVEN_MIRROR_OF",
										"value": "${MAVEN_MIRROR_OF}"
									},
									{
										"name": "MAVEN_REPOS",
										"value": "RHDMCENTR,EXTERNAL"
									},
									{
										"name": "RHDMCENTR_MAVEN_REPO_ID",
										"value": "repo-rhdmcentr"
									},
									{
										"name": "RHDMCENTR_MAVEN_REPO_SERVICE",
										"value": "${DECISION_CENTRAL_SERVICE}"
									},
									{
										"name": "RHDMCENTR_MAVEN_REPO_PATH",
										"value": "/maven2/"
									},
									{
										"name": "RHDMCENTR_MAVEN_REPO_USERNAME",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_USER",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "RHDMCENTR_MAVEN_REPO_PASSWORD",
										"valueFrom": {
											"secretKeyRef": {
												"key": "KIE_ADMIN_PWD",
												"name": "${CREDENTIALS_SECRET}"
											}
										}
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_ID",
										"value": "${MAVEN_REPO_ID}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_URL",
										"value": "${MAVEN_REPO_URL}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_USERNAME",
										"value": "${MAVEN_REPO_USERNAME}"
									},
									{
										"name": "EXTERNAL_MAVEN_REPO_PASSWORD",
										"value": "${MAVEN_REPO_PASSWORD}"
									},
									{
										"name": "KIE_SERVER_MGMT_DISABLED",
										"value": "${KIE_SERVER_MGMT_DISABLED}"
									},
									{
										"name": "KIE_SERVER_STARTUP_STRATEGY",
										"value": "OpenShiftStartupStrategy"
									},
									{
										"name": "HTTPS_KEYSTORE_DIR",
										"value": "/etc/kieserver-secret-volume"
									},
									{
										"name": "HTTPS_KEYSTORE",
										"value": "${KIE_SERVER_HTTPS_KEYSTORE}"
									},
									{
										"name": "HTTPS_NAME",
										"value": "${KIE_SERVER_HTTPS_NAME}"
									},
									{
										"name": "HTTPS_PASSWORD",
										"value": "${KIE_SERVER_HTTPS_PASSWORD}"
									},
									{
										"name": "JGROUPS_PING_PROTOCOL",
										"value": "openshift.DNS_PING"
									},
									{
										"name": "OPENSHIFT_DNS_PING_SERVICE_NAME",
										"value": "${APPLICATION_NAME}-kieserver-ping"
									},
									{
										"name": "OPENSHIFT_DNS_PING_SERVICE_PORT",
										"value": "8888"
									},
									{
										"name": "SSO_URL",
										"value": "${SSO_URL}"
									},
									{
										"name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
										"value": "ROOT.war"
									},
									{
										"name": "SSO_REALM",
										"value": "${SSO_REALM}"
									},
									{
										"name": "SSO_SECRET",
										"value": "${KIE_SERVER_SSO_SECRET}"
									},
									{
										"name": "SSO_CLIENT",
										"value": "${KIE_SERVER_SSO_CLIENT}"
									},
									{
										"name": "SSO_USERNAME",
										"value": "${SSO_USERNAME}"
									},
									{
										"name": "SSO_PASSWORD",
										"value": "${SSO_PASSWORD}"
									},
									{
										"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
										"value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"
									},
									{
										"name": "SSO_PRINCIPAL_ATTRIBUTE",
										"value": "${SSO_PRINCIPAL_ATTRIBUTE}"
									},
									{
										"name": "HOSTNAME_HTTP",
										"value": "${KIE_SERVER_HOSTNAME_HTTP}"
									},
									{
										"name": "HOSTNAME_HTTPS",
										"value": "${KIE_SERVER_HOSTNAME_HTTPS}"
									},
									{
										"name": "AUTH_LDAP_URL",
										"value": "${AUTH_LDAP_URL}"
									},
									{
										"name": "AUTH_LDAP_BIND_DN",
										"value": "${AUTH_LDAP_BIND_DN}"
									},
									{
										"name": "AUTH_LDAP_BIND_CREDENTIAL",
										"value": "${AUTH_LDAP_BIND_CREDENTIAL}"
									},
									{
										"name": "AUTH_LDAP_JAAS_SECURITY_DOMAIN",
										"value": "${AUTH_LDAP_JAAS_SECURITY_DOMAIN}"
									},
									{
										"name": "AUTH_LDAP_BASE_CTX_DN",
										"value": "${AUTH_LDAP_BASE_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_BASE_FILTER",
										"value": "${AUTH_LDAP_BASE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_SEARCH_SCOPE",
										"value": "${AUTH_LDAP_SEARCH_SCOPE}"
									},
									{
										"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
										"value": "${AUTH_LDAP_SEARCH_TIME_LIMIT}"
									},
									{
										"name": "AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE",
										"value": "${AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE}"
									},
									{
										"name": "AUTH_LDAP_PARSE_USERNAME",
										"value": "${AUTH_LDAP_PARSE_USERNAME}"
									},
									{
										"name": "AUTH_LDAP_USERNAME_BEGIN_STRING",
										"value": "${AUTH_LDAP_USERNAME_BEGIN_STRING}"
									},
									{
										"name": "AUTH_LDAP_USERNAME_END_STRING",
										"value": "${AUTH_LDAP_USERNAME_END_STRING}"
									},
									{
										"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
										"value": "${AUTH_LDAP_ROLE_ATTRIBUTE_ID}"
									},
									{
										"name": "AUTH_LDAP_ROLES_CTX_DN",
										"value": "${AUTH_LDAP_ROLES_CTX_DN}"
									},
									{
										"name": "AUTH_LDAP_ROLE_FILTER",
										"value": "${AUTH_LDAP_ROLE_FILTER}"
									},
									{
										"name": "AUTH_LDAP_ROLE_RECURSION",
										"value": "${AUTH_LDAP_ROLE_RECURSION}"
									},
									{
										"name": "AUTH_LDAP_DEFAULT_ROLE",
										"value": "${AUTH_LDAP_DEFAULT_ROLE}"
									},
									{
										"name": "AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID",
										"value": "${AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID}"
									},
									{
										"name": "AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN",
										"value": "${AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN}"
									},
									{
										"name": "AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN",
										"value": "${AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN}"
									},
									{
										"name": "AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK",
										"value": "${AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK}"
									},
									{
										"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
										"value": "${AUTH_ROLE_MAPPER_ROLES_PROPERTIES}"
									},
									{
										"name": "AUTH_ROLE_MAPPER_REPLACE_ROLE",
										"value": "${AUTH_ROLE_MAPPER_REPLACE_ROLE}"
									}
								],
								"image": "${KIE_SERVER_IMAGE_STREAM_NAME}",
								"imagePullPolicy": "Always",
								"lifecycle": {
									"postStart": {
										"exec": {
											"command": [
												"/bin/sh",
												"/opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh"
											]
										}
									},
									"preStop": {
										"exec": {
											"command": [
												"/bin/sh",
												"/opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh"
											]
										}
									}
								},
								"livenessProbe": {
									"failureThreshold": 3,
									"httpGet": {
										"path": "/services/rest/server/healthcheck",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 180,
									"periodSeconds": 15,
									"timeoutSeconds": 2
								},
								"name": "${APPLICATION_NAME}-kieserver",
								"ports": [
									{
										"containerPort": 8778,
										"name": "jolokia",
										"protocol": "TCP"
									},
									{
										"containerPort": 8080,
										"name": "http",
										"protocol": "TCP"
									},
									{
										"containerPort": 8443,
										"name": "https",
										"protocol": "TCP"
									},
									{
										"containerPort": 8888,
										"name": "ping",
										"protocol": "TCP"
									}
								],
								"readinessProbe": {
									"failureThreshold": 36,
									"httpGet": {
										"path": "/services/rest/server/readycheck",
										"port": 8080,
										"scheme": "HTTP"
									},
									"initialDelaySeconds": 30,
									"periodSeconds": 5,
									"timeoutSeconds": 2
								},
								"resources": {
									"limits": {
										"memory": "${KIE_SERVER_MEMORY_LIMIT}"
									}
								},
								"volumeMounts": [
									{
										"mountPath": "/etc/kieserver-secret-volume",
										"name": "kieserver-keystore-volume",
										"readOnly": true
									}
								]
							}
						],
						"serviceAccountName": "${APPLICATION_NAME}-kieserver",
						"terminationGracePeriodSeconds": 90,
						"volumes": [
							{
								"name": "kieserver-keystore-volume",
								"secret": {
									"secretName": "${KIE_SERVER_HTTPS_SECRET}"
								}
							}
						]
					}
				},
				"triggers": [
					{
						"imageChangeParams": {
							"automatic": true,
							"containerNames": [
								"${APPLICATION_NAME}-kieserver"
							],
							"from": {
								"kind": "ImageStreamTag",
								"name": "${KIE_SERVER_IMAGE_STREAM_NAME}:${IMAGE_STREAM_TAG}",
								"namespace": "${IMAGE_STREAM_NAMESPACE}"
							}
						},
						"type": "ImageChange"
					},
					{
						"type": "ConfigChange"
					}
				]
			}
		}
	],
	"parameters": [
		{
			"name": "APPLICATION_NAME",
			"displayName": "Application Name",
			"description": "The name for the application.",
			"value": "myapp",
			"required": true
		},
		{
			"name": "MAVEN_MIRROR_URL",
			"displayName": "Maven mirror URL",
			"description": "Maven mirror that KIE server must use. If you configure a mirror, this mirror must contain all artifacts that are required for deploying your services."
		},
		{
			"name": "MAVEN_MIRROR_OF",
			"displayName": "Maven mirror of",
			"description": "Maven mirror configuration for KIE server.",
			"value": "external:*"
		},
		{
			"name": "MAVEN_REPO_ID",
			"displayName": "Maven repository ID",
			"description": "The id to use for the maven repository. If set, it can be excluded from the optionally configured mirror by adding it to MAVEN_MIRROR_OF. For example: external:*,!repo-rhdmcentr,!repo-custom. If MAVEN_MIRROR_URL is set but MAVEN_MIRROR_ID is not set, an id will be generated randomly, but won't be usable in MAVEN_MIRROR_OF.",
			"value": "repo-custom"
		},
		{
			"name": "MAVEN_REPO_URL",
			"displayName": "Maven repository URL",
			"description": "Fully qualified URL to a Maven repository or service."
		},
		{
			"name": "MAVEN_REPO_USERNAME",
			"displayName": "Maven repository user name",
			"description": "User name for accessing the Maven repository, if required."
		},
		{
			"name": "MAVEN_REPO_PASSWORD",
			"displayName": "Maven repository password",
			"description": "Password to access the Maven repository, if required."
		},
		{
			"name": "DECISION_CENTRAL_SERVICE",
			"displayName": "Name of the Decision Central service",
			"description": "The Service name for the optional Decision Central, where it can be reached, to allow service lookups (for example, maven repo usage), if required."
		},
		{
			"name": "CREDENTIALS_SECRET",
			"displayName": "Credentials secret",
			"description": "Secret containing the KIE_ADMIN_USER and KIE_ADMIN_PWD values.",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_NAMESPACE",
			"displayName": "ImageStream Namespace",
			"description": "Namespace in which the ImageStreams for Red Hat Decision Manager images are installed. These ImageStreams are normally installed in the openshift namespace. You need to modify this parameter only if you installed the ImageStreams in a different namespace/project.",
			"value": "openshift",
			"required": true
		},
		{
			"name": "KIE_SERVER_IMAGE_STREAM_NAME",
			"displayName": "KIE Server ImageStream Name",
			"description": "The name of the image stream to use for KIE server. Default is \"rhdm-kieserver-rhel8\".",
			"value": "rhdm-kieserver-rhel8",
			"required": true
		},
		{
			"name": "IMAGE_STREAM_TAG",
			"displayName": "ImageStream Tag",
			"description": "A named pointer to an image in an image stream. Default is \"7.9.0\".",
			"value": "7.9.0",
			"required": true
		},
		{
			"name": "KIE_SERVER_MODE",
			"displayName": "KIE Server Mode",
			"description": "The KIE Server mode. Valid values are 'DEVELOPMENT' or 'PRODUCTION'. In production mode, you can not deploy SNAPSHOT versions of artifacts on the KIE server and can not change the version of an artifact in an existing container. (Sets the org.kie.server.mode system property).",
			"value": "PRODUCTION"
		},
		{
			"name": "KIE_MBEANS",
			"displayName": "KIE MBeans",
			"description": "KIE server mbeans enabled/disabled. (Sets the kie.mbeans and kie.scanner.mbeans system properties)",
			"value": "enabled"
		},
		{
			"name": "DROOLS_SERVER_FILTER_CLASSES",
			"displayName": "Drools Server Filter Classes",
			"description": "KIE server class filtering. (Sets the org.drools.server.filter.classes system property)",
			"value": "true"
		},
		{
			"name": "PROMETHEUS_SERVER_EXT_DISABLED",
			"displayName": "Prometheus Server Extension Disabled",
			"description": "If set to false, the prometheus server extension will be enabled. (Sets the org.kie.prometheus.server.ext.disabled system property)"
		},
		{
			"name": "KIE_SERVER_HOSTNAME_HTTP",
			"displayName": "KIE Server Custom http Route Hostname",
			"description": "Custom hostname for http service route. Leave blank for default hostname, e.g.: insecure-\u003capplication-name\u003e-kieserver-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER_HOSTNAME_HTTPS",
			"displayName": "KIE Server Custom https Route Hostname",
			"description": "Custom hostname for https service route. Leave blank for default hostname, e.g.: \u003capplication-name\u003e-kieserver-\u003cproject\u003e.\u003cdefault-domain-suffix\u003e"
		},
		{
			"name": "KIE_SERVER_HTTPS_SECRET",
			"displayName": "KIE Server Keystore Secret Name",
			"description": "The name of the secret containing the keystore file.",
			"required": true
		},
		{
			"name": "KIE_SERVER_HTTPS_KEYSTORE",
			"displayName": "KIE Server Keystore Filename",
			"description": "The name of the keystore file within the secret.",
			"value": "keystore.jks"
		},
		{
			"name": "KIE_SERVER_HTTPS_NAME",
			"displayName": "KIE Server Certificate Name",
			"description": "The name associated with the server certificate.",
			"value": "jboss"
		},
		{
			"name": "KIE_SERVER_HTTPS_PASSWORD",
			"displayName": "KIE Server Keystore Password",
			"description": "The password for the keystore and certificate.",
			"value": "mykeystorepass"
		},
		{
			"name": "KIE_SERVER_BYPASS_AUTH_USER",
			"displayName": "KIE Server Bypass Auth User",
			"description": "Allows the KIE server to bypass the authenticated user for task-related operations, for example, queries. (Sets the org.kie.server.bypass.auth.user system property)",
			"value": "false"
		},
		{
			"name": "KIE_SERVER_MEMORY_LIMIT",
			"displayName": "KIE Server Container Memory Limit",
			"description": "KIE server Container memory limit.",
			"value": "1Gi"
		},
		{
			"name": "KIE_SERVER_CONTAINER_DEPLOYMENT",
			"displayName": "KIE Server Container Deployment",
			"description": "KIE Server Container deployment configuration with optional alias. Format: containerId=groupId:artifactId:version|c2(alias2)=g2:a2:v2"
		},
		{
			"name": "KIE_SERVER_MGMT_DISABLED",
			"displayName": "Disable KIE Server Management",
			"description": "Disable management api and don't allow KIE containers to be deployed/undeployed or started/stopped. Sets the property org.kie.server.mgmt.api.disabled to true and org.kie.server.startup.strategy to LocalContainersStartupStrategy."
		},
		{
			"name": "SSO_URL",
			"displayName": "RH-SSO URL",
			"description": "RH-SSO URL."
		},
		{
			"name": "SSO_REALM",
			"displayName": "RH-SSO Realm name",
			"description": "RH-SSO Realm name."
		},
		{
			"name": "KIE_SERVER_SSO_CLIENT",
			"displayName": "KIE Server RH-SSO Client name",
			"description": "KIE Server RH-SSO Client name."
		},
		{
			"name": "KIE_SERVER_SSO_SECRET",
			"displayName": "KIE Server RH-SSO Client Secret",
			"description": "KIE Server RH-SSO Client Secret"
		},
		{
			"name": "SSO_USERNAME",
			"displayName": "RH-SSO Realm admin user name",
			"description": "RH-SSO Realm admin user name used to create the Client if it doesn't exist."
		},
		{
			"name": "SSO_PASSWORD",
			"displayName": "RH-SSO Realm Admin Password",
			"description": "RH-SSO Realm Admin Password used to create the Client."
		},
		{
			"name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
			"displayName": "RH-SSO Disable SSL Certificate Validation",
			"description": "RH-SSO Disable SSL Certificate Validation.",
			"value": "false"
		},
		{
			"name": "SSO_PRINCIPAL_ATTRIBUTE",
			"displayName": "RH-SSO Principal Attribute",
			"description": "RH-SSO Principal Attribute to use as user name.",
			"value": "preferred_username"
		},
		{
			"name": "AUTH_LDAP_URL",
			"displayName": "LDAP Endpoint",
			"description": "LDAP endpoint to connect for authentication. For failover, set two or more LDAP endpoints separated by space."
		},
		{
			"name": "AUTH_LDAP_BIND_DN",
			"displayName": "LDAP Bind DN",
			"description": "Bind DN used for authentication."
		},
		{
			"name": "AUTH_LDAP_BIND_CREDENTIAL",
			"displayName": "LDAP Bind Credentials",
			"description": "LDAP Credentials used for authentication."
		},
		{
			"name": "AUTH_LDAP_JAAS_SECURITY_DOMAIN",
			"displayName": "LDAP JAAS Security Domain",
			"description": "The JMX ObjectName of the JaasSecurityDomain used to decrypt the password."
		},
		{
			"name": "AUTH_LDAP_BASE_CTX_DN",
			"displayName": "LDAP Base DN",
			"description": "LDAP Base DN of the top-level context to begin the user search."
		},
		{
			"name": "AUTH_LDAP_BASE_FILTER",
			"displayName": "LDAP Base Search filter",
			"description": "LDAP search filter used to locate the context of the user to authenticate. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. A common example for the search filter is (uid={0})."
		},
		{
			"name": "AUTH_LDAP_SEARCH_SCOPE",
			"displayName": "LDAP Search scope",
			"description": "The search scope to use."
		},
		{
			"name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
			"displayName": "LDAP Search time limit",
			"description": "The timeout in milliseconds for user or role searches."
		},
		{
			"name": "AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE",
			"displayName": "LDAP DN attribute",
			"description": "The name of the attribute in the user entry that contains the DN of the user. This may be necessary if the DN of the user itself contains special characters, backslash for example, that prevent correct user mapping. If the attribute does not exist, the entry’s DN is used."
		},
		{
			"name": "AUTH_LDAP_PARSE_USERNAME",
			"displayName": "LDAP Parse username",
			"description": "A flag indicating if the DN is to be parsed for the user name. If set to true, the DN is parsed for the user name. If set to false the DN is not parsed for the user name. This option is used together with usernameBeginString and usernameEndString."
		},
		{
			"name": "AUTH_LDAP_USERNAME_BEGIN_STRING",
			"displayName": "LDAP Username begin string",
			"description": "Defines the String which is to be removed from the start of the DN to reveal the user name. This option is used together with usernameEndString and only taken into account if parseUsername is set to true."
		},
		{
			"name": "AUTH_LDAP_USERNAME_END_STRING",
			"displayName": "LDAP Username end string",
			"description": "Defines the String which is to be removed from the end of the DN to reveal the user name. This option is used together with usernameEndString and only taken into account if parseUsername is set to true."
		},
		{
			"name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
			"displayName": "LDAP Role attributeID",
			"description": "Name of the attribute containing the user roles."
		},
		{
			"name": "AUTH_LDAP_ROLES_CTX_DN",
			"displayName": "LDAP Roles Search DN",
			"description": "The fixed DN of the context to search for user roles. This is not the DN where the actual roles are, but the DN where the objects containing the user roles are. For example, in a Microsoft Active Directory server, this is the DN where the user account is."
		},
		{
			"name": "AUTH_LDAP_ROLE_FILTER",
			"displayName": "LDAP Role search filter",
			"description": "A search filter used to locate the roles associated with the authenticated user. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. The authenticated userDN is substituted into the filter anywhere a {1} is used. An example search filter that matches on the input username is (member={0}). An alternative that matches on the authenticated userDN is (member={1})."
		},
		{
			"name": "AUTH_LDAP_ROLE_RECURSION",
			"displayName": "LDAP Role recursion",
			"description": "The number of levels of recursion the role search will go below a matching context. Disable recursion by setting this to 0."
		},
		{
			"name": "AUTH_LDAP_DEFAULT_ROLE",
			"displayName": "LDAP Default role",
			"description": "A role included for all authenticated users."
		},
		{
			"name": "AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID",
			"displayName": "LDAP Role name attribute ID",
			"description": "Name of the attribute within the roleCtxDN context which contains the role name. If the roleAttributeIsDN property is set to true, this property is used to find the role object’s name attribute."
		},
		{
			"name": "AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN",
			"displayName": "LDAP Role DN contains roleNameAttributeID",
			"description": "A flag indicating if the DN returned by a query contains the roleNameAttributeID. If set to true, the DN is checked for the roleNameAttributeID. If set to false, the DN is not checked for the roleNameAttributeID. This flag can improve the performance of LDAP queries."
		},
		{
			"name": "AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN",
			"displayName": "LDAP Role Attribute ID is DN",
			"description": "Whether or not the roleAttributeID contains the fully-qualified DN of a role object. If false, the role name is taken from the value of the roleNameAttributeId attribute of the context name. Certain directory schemas, such as Microsoft Active Directory, require this attribute to be set to true."
		},
		{
			"name": "AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK",
			"displayName": "LDAP Referral user attribute ID",
			"description": "If you are not using referrals, you can ignore this option. When using referrals, this option denotes the attribute name which contains users defined for a certain role, for example member, if the role object is inside the referral. Users are checked against the content of this attribute name. If this option is not set, the check will always fail, so role objects cannot be stored in a referral tree."
		},
		{
			"name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
			"displayName": "RoleMapping rolesProperties file path",
			"description": "When present, the RoleMapping Login Module will be configured to use the provided file. This property defines the fully-qualified file path and name of a properties file or resource which maps roles to replacement roles. The format is original_role=role1,role2,role3"
		},
		{
			"name": "AUTH_ROLE_MAPPER_REPLACE_ROLE",
			"displayName": "RoleMapping replaceRole property",
			"description": "Whether to add to the current roles, or replace the current roles with the mapped ones. Replaces if set to true."
		}
	],
	"labels": {
		"rhdm": "7.9",
		"template": "rhdm79-kieserver"
	}
}