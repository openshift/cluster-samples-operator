{
    "apiVersion": "v1",
    "kind": "Template",
    "labels": {
        "template": "processserver64-externaldb-s2i",
        "xpaas": "1.4.17"
    },
    "message": "A new BPMS application has been created in your project. The username/password for accessing the KIE Server REST or JMS interface is ${KIE_SERVER_USER}/${KIE_SERVER_PASSWORD}. Please be sure to create the secret named \"${HTTPS_SECRET}\" containing the ${HTTPS_KEYSTORE} file used for serving secure content.",
    "metadata": {
        "annotations": {
            "description": "An example BPM Suite application with a external database. For more information about using this template, see https://github.com/jboss-openshift/application-templates.",
            "iconClass": "icon-processserver",
            "openshift.io/display-name": "JBoss BPM Suite 6.4 intelligent process server + External Database",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "tags": "processserver,jboss,hidden",
            "template.openshift.io/bindable": "false",
            "template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en/red-hat-jboss-bpm-suite/",
            "template.openshift.io/long-description": "This template defines resources needed to develop Red Hat Business Process Suite intelligent process server 6.4 based application, including a build configuration, application deployment configuration, database deployment configuration for external database and secure communication using https.",
            "template.openshift.io/support-url": "https://access.redhat.com",
            "version": "1.4.17"
        },
        "name": "processserver64-externaldb-s2i"
    },
    "objects": [
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The web server's http port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "ports": [
                    {
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The web server's https port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "secure-${APPLICATION_NAME}"
            },
            "spec": {
                "ports": [
                    {
                        "port": 8443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-http",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for application's http service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTP}",
                "to": {
                    "name": "${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-https",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for application's https service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "secure-${APPLICATION_NAME}"
            },
            "spec": {
                "host": "${HOSTNAME_HTTPS}",
                "tls": {
                    "termination": "passthrough"
                },
                "to": {
                    "name": "secure-${APPLICATION_NAME}"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "ImageStream",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "BuildConfig",
            "metadata": {
                "annotations": {
                    "template.alpha.openshift.io/wait-for-ready": "true"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}:latest"
                    }
                },
                "source": {
                    "contextDir": "${CONTEXT_DIR}",
                    "git": {
                        "ref": "${SOURCE_REPOSITORY_REF}",
                        "uri": "${SOURCE_REPOSITORY_URL}"
                    },
                    "images": [
                        {
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${EXTENSIONS_IMAGE}",
                                "namespace": "${EXTENSIONS_IMAGE_NAMESPACE}"
                            },
                            "paths": [
                                {
                                    "destinationDir": "./${CONTEXT_DIR}/extensions/extras",
                                    "sourcePath": "${EXTENSIONS_INSTALL_DIR}/."
                                }
                            ]
                        }
                    ],
                    "type": "Git"
                },
                "strategy": {
                    "sourceStrategy": {
                        "env": [
                            {
                                "name": "KIE_CONTAINER_DEPLOYMENT",
                                "value": "${KIE_CONTAINER_DEPLOYMENT}"
                            },
                            {
                                "name": "MAVEN_MIRROR_URL",
                                "value": "${MAVEN_MIRROR_URL}"
                            },
                            {
                                "name": "MAVEN_ARGS_APPEND",
                                "value": "${MAVEN_ARGS_APPEND}"
                            },
                            {
                                "name": "CUSTOM_INSTALL_DIRECTORIES",
                                "value": "extensions/*"
                            },
                            {
                                "name": "ARTIFACT_DIR",
                                "value": "${ARTIFACT_DIR}"
                            }
                        ],
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "name": "jboss-processserver64-openshift:1.6",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}"
                        }
                    },
                    "type": "Source"
                },
                "triggers": [
                    {
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        },
                        "type": "GitHub"
                    },
                    {
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        },
                        "type": "Generic"
                    },
                    {
                        "imageChange": {},
                        "type": "ImageChange"
                    },
                    {
                        "imageChange": {
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${EXTENSIONS_IMAGE}",
                                "namespace": "${EXTENSIONS_IMAGE_NAMESPACE}"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "annotations": {
                    "template.alpha.openshift.io/wait-for-ready": "true"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}"
                        },
                        "name": "${APPLICATION_NAME}"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "KIE_CONTAINER_DEPLOYMENT",
                                        "value": "${KIE_CONTAINER_DEPLOYMENT}"
                                    },
                                    {
                                        "name": "KIE_SERVER_PROTOCOL",
                                        "value": "${KIE_SERVER_PROTOCOL}"
                                    },
                                    {
                                        "name": "KIE_SERVER_PORT",
                                        "value": "${KIE_SERVER_PORT}"
                                    },
                                    {
                                        "name": "KIE_SERVER_USER",
                                        "value": "${KIE_SERVER_USER}"
                                    },
                                    {
                                        "name": "KIE_SERVER_PASSWORD",
                                        "value": "${KIE_SERVER_PASSWORD}"
                                    },
                                    {
                                        "name": "KIE_SERVER_DOMAIN",
                                        "value": "${KIE_SERVER_DOMAIN}"
                                    },
                                    {
                                        "name": "KIE_SERVER_PERSISTENCE_DIALECT",
                                        "value": "${KIE_SERVER_PERSISTENCE_DIALECT}"
                                    },
                                    {
                                        "name": "KIE_SERVER_PERSISTENCE_SCHEMA",
                                        "value": "${KIE_SERVER_PERSISTENCE_SCHEMA}"
                                    },
                                    {
                                        "name": "KIE_SERVER_PERSISTENCE_DS",
                                        "value": "${BPMS_JNDI}"
                                    },
                                    {
                                        "name": "DATASOURCES",
                                        "value": "BPMS,QUARTZ"
                                    },
                                    {
                                        "name": "BPMS_JNDI",
                                        "value": "${BPMS_JNDI}"
                                    },
                                    {
                                        "name": "BPMS_SERVICE_HOST",
                                        "value": "${BPMS_SERVICE_HOST}"
                                    },
                                    {
                                        "name": "BPMS_SERVICE_PORT",
                                        "value": "${BPMS_SERVICE_PORT}"
                                    },
                                    {
                                        "name": "BPMS_NONXA",
                                        "value": "${BPMS_NONXA}"
                                    },
                                    {
                                        "name": "BPMS_URL",
                                        "value": "${BPMS_CONNECTION_URL}"
                                    },
                                    {
                                        "name": "BPMS_XA_CONNECTION_PROPERTY_URL",
                                        "value": "${BPMS_CONNECTION_URL}"
                                    },
                                    {
                                        "name": "BPMS_DRIVER",
                                        "value": "${BPMS_DRIVER}"
                                    },
                                    {
                                        "name": "BPMS_DATABASE",
                                        "value": "${BPMS_DATABASE}"
                                    },
                                    {
                                        "name": "BPMS_USERNAME",
                                        "value": "${BPMS_DATABASE_USERNAME}"
                                    },
                                    {
                                        "name": "BPMS_PASSWORD",
                                        "value": "${BPMS_DATABASE_PASSWORD}"
                                    },
                                    {
                                        "name": "BPMS_MIN_POOL_SIZE",
                                        "value": "${BPMS_MIN_POOL_SIZE}"
                                    },
                                    {
                                        "name": "BPMS_MAX_POOL_SIZE",
                                        "value": "${BPMS_MAX_POOL_SIZE}"
                                    },
                                    {
                                        "name": "BPMS_CONNECTION_CHECKER",
                                        "value": "${BPMS_CONNECTION_CHECKER}"
                                    },
                                    {
                                        "name": "BPMS_EXCEPTION_SORTER",
                                        "value": "${BPMS_EXCEPTION_SORTER}"
                                    },
                                    {
                                        "name": "BPMS_BACKGROUND_VALIDATION",
                                        "value": "${BPMS_BACKGROUND_VALIDATION}"
                                    },
                                    {
                                        "name": "BPMS_BACKGROUND_VALIDATION_MILLIS",
                                        "value": "${BPMS_BACKGROUND_VALIDATION_MILLIS}"
                                    },
                                    {
                                        "name": "QUARTZ_JNDI",
                                        "value": "${BPMS_JNDI}NotManaged"
                                    },
                                    {
                                        "name": "QUARTZ_SERVICE_HOST",
                                        "value": "${BPMS_SERVICE_HOST}"
                                    },
                                    {
                                        "name": "QUARTZ_SERVICE_PORT",
                                        "value": "${BPMS_SERVICE_PORT}"
                                    },
                                    {
                                        "name": "QUARTZ_URL",
                                        "value": "${BPMS_CONNECTION_URL}"
                                    },
                                    {
                                        "name": "QUARTZ_DRIVER",
                                        "value": "${BPMS_DRIVER}"
                                    },
                                    {
                                        "name": "QUARTZ_DRIVER_MODULE",
                                        "value": "${QUARTZ_DRIVER_MODULE}"
                                    },
                                    {
                                        "name": "QUARTZ_DATABASE",
                                        "value": "${BPMS_DATABASE}"
                                    },
                                    {
                                        "name": "QUARTZ_USERNAME",
                                        "value": "${BPMS_DATABASE_USERNAME}"
                                    },
                                    {
                                        "name": "QUARTZ_PASSWORD",
                                        "value": "${BPMS_DATABASE_PASSWORD}"
                                    },
                                    {
                                        "name": "QUARTZ_JTA",
                                        "value": "false"
                                    },
                                    {
                                        "name": "QUARTZ_NONXA",
                                        "value": "true"
                                    },
                                    {
                                        "name": "QUARTZ_MIN_POOL_SIZE",
                                        "value": "${BPMS_MIN_POOL_SIZE}"
                                    },
                                    {
                                        "name": "QUARTZ_MAX_POOL_SIZE",
                                        "value": "${BPMS_MAX_POOL_SIZE}"
                                    },
                                    {
                                        "name": "QUARTZ_CONNECTION_CHECKER",
                                        "value": "${BPMS_CONNECTION_CHECKER}"
                                    },
                                    {
                                        "name": "QUARTZ_EXCEPTION_SORTER",
                                        "value": "${BPMS_EXCEPTION_SORTER}"
                                    },
                                    {
                                        "name": "QUARTZ_BACKGROUND_VALIDATION",
                                        "value": "${BPMS_BACKGROUND_VALIDATION}"
                                    },
                                    {
                                        "name": "QUARTZ_BACKGROUND_VALIDATION_MILLIS",
                                        "value": "${BPMS_BACKGROUND_VALIDATION_MILLIS}"
                                    },
                                    {
                                        "name": "HTTPS_KEYSTORE_DIR",
                                        "value": "/etc/processserver-secret-volume"
                                    },
                                    {
                                        "name": "HTTPS_KEYSTORE",
                                        "value": "${HTTPS_KEYSTORE}"
                                    },
                                    {
                                        "name": "HTTPS_NAME",
                                        "value": "${HTTPS_NAME}"
                                    },
                                    {
                                        "name": "HTTPS_PASSWORD",
                                        "value": "${HTTPS_PASSWORD}"
                                    },
                                    {
                                        "name": "HORNETQ_CLUSTER_PASSWORD",
                                        "value": "${HORNETQ_CLUSTER_PASSWORD}"
                                    },
                                    {
                                        "name": "HORNETQ_QUEUES",
                                        "value": "${HORNETQ_QUEUES}"
                                    },
                                    {
                                        "name": "HORNETQ_TOPICS",
                                        "value": "${HORNETQ_TOPICS}"
                                    }
                                ],
                                "image": "${APPLICATION_NAME}",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/livenessProbe.sh"
                                        ]
                                    },
                                    "initialDelaySeconds": 60
                                },
                                "name": "${APPLICATION_NAME}",
                                "ports": [
                                    {
                                        "containerPort": 8778,
                                        "name": "jolokia",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/eap/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "${MEMORY_LIMIT}"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/processserver-secret-volume",
                                        "name": "processserver-keystore-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "terminationGracePeriodSeconds": 60,
                        "volumes": [
                            {
                                "name": "processserver-keystore-volume",
                                "secret": {
                                    "secretName": "${HTTPS_SECRET}"
                                }
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}"
                            ],
                            "from": {
                                "kind": "ImageStream",
                                "name": "${APPLICATION_NAME}"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        }
    ],
    "parameters": [
        {
            "description": "The KIE Container deployment configuration in format: containerId=groupId:artifactId:version|c2=g2:a2:v2",
            "displayName": "KIE Container Deployment",
            "name": "KIE_CONTAINER_DEPLOYMENT",
            "required": false,
            "value": "processserver-library=org.openshift.quickstarts:processserver-library:1.4.0.Final"
        },
        {
            "description": "The protocol to access the KIE Server REST interface.",
            "displayName": "KIE Server Protocol",
            "name": "KIE_SERVER_PROTOCOL",
            "required": false,
            "value": "https"
        },
        {
            "description": "The port to access the KIE Server REST interface.",
            "displayName": "KIE Server Port",
            "name": "KIE_SERVER_PORT",
            "required": false,
            "value": "8443"
        },
        {
            "description": "The user name to access the KIE Server REST or JMS interface.",
            "displayName": "KIE Server Username",
            "name": "KIE_SERVER_USER",
            "required": false,
            "value": "kieserver"
        },
        {
            "description": "The password to access the KIE Server REST or JMS interface. Must be different than username; must not be root, admin, or administrator; must contain at least 8 characters, 1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric symbol(s).",
            "displayName": "KIE Server Password",
            "from": "[a-zA-Z]{6}[0-9]{1}!",
            "generate": "expression",
            "name": "KIE_SERVER_PASSWORD",
            "required": false
        },
        {
            "description": "JAAS LoginContext domain that shall be used to authenticate users when using JMS.",
            "displayName": "KIE Server Domain",
            "name": "KIE_SERVER_DOMAIN",
            "required": false,
            "value": "other"
        },
        {
            "description": "The name for the application.",
            "displayName": "Application Name",
            "name": "APPLICATION_NAME",
            "required": true,
            "value": "kie-app"
        },
        {
            "description": "Custom hostname for http service route.  Leave blank for default hostname, e.g.: <application-name>-<project>.<default-domain-suffix>",
            "displayName": "Custom http Route Hostname",
            "name": "HOSTNAME_HTTP",
            "required": false,
            "value": ""
        },
        {
            "description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>",
            "displayName": "Custom https Route Hostname",
            "name": "HOSTNAME_HTTPS",
            "required": false,
            "value": ""
        },
        {
            "description": "Git source URI for application",
            "displayName": "Git Repository URL",
            "name": "SOURCE_REPOSITORY_URL",
            "required": true,
            "value": "https://github.com/jboss-openshift/openshift-quickstarts"
        },
        {
            "description": "Git branch/tag reference",
            "displayName": "Git Reference",
            "name": "SOURCE_REPOSITORY_REF",
            "required": false,
            "value": "1.4"
        },
        {
            "description": "Path within Git project to build; empty for root project directory.",
            "displayName": "Context Directory",
            "name": "CONTEXT_DIR",
            "required": false,
            "value": "processserver/library"
        },
        {
            "description": "Queue names",
            "displayName": "Queues",
            "name": "HORNETQ_QUEUES",
            "required": false,
            "value": ""
        },
        {
            "description": "Topic names",
            "displayName": "Topics",
            "name": "HORNETQ_TOPICS",
            "required": false,
            "value": ""
        },
        {
            "description": "The name of the secret containing the keystore file",
            "displayName": "Server Keystore Secret Name",
            "name": "HTTPS_SECRET",
            "required": false,
            "value": "processserver-app-secret"
        },
        {
            "description": "The name of the keystore file within the secret",
            "displayName": "Server Keystore Filename",
            "name": "HTTPS_KEYSTORE",
            "required": false,
            "value": "keystore.jks"
        },
        {
            "description": "The name associated with the server certificate",
            "displayName": "Server Certificate Name",
            "name": "HTTPS_NAME",
            "required": false,
            "value": "jboss"
        },
        {
            "description": "The password for the keystore and certificate",
            "displayName": "Server Keystore Password",
            "name": "HTTPS_PASSWORD",
            "required": false,
            "value": "mykeystorepass"
        },
        {
            "description": "HornetQ cluster admin password",
            "displayName": "HornetQ Password",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "HORNETQ_CLUSTER_PASSWORD",
            "required": true
        },
        {
            "description": "GitHub trigger secret",
            "displayName": "Github Webhook Secret",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "GITHUB_WEBHOOK_SECRET",
            "required": true
        },
        {
            "description": "Generic build trigger secret",
            "displayName": "Generic Webhook Secret",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "GENERIC_WEBHOOK_SECRET",
            "required": true
        },
        {
            "description": "Hibernate persistence dialect.",
            "displayName": "KIE Server Persistence Dialect",
            "example": "org.hibernate.dialect.MySQL5Dialect",
            "name": "KIE_SERVER_PERSISTENCE_DIALECT",
            "required": true
        },
        {
            "description": "Hibernate persistence schema.",
            "displayName": "KIE Server Persistence Schema",
            "example": "bd.schema",
            "name": "KIE_SERVER_PERSISTENCE_SCHEMA",
            "required": false
        },
        {
            "description": "Sets the datasource service port. Use this if you want to use the predefined mysql or postgresql datasource properties. Leave blank if the URL or XA_CONNECTION_URL is set",
            "displayName": "Datasource Service Host",
            "example": "10.10.10.1",
            "name": "BPMS_SERVICE_HOST",
            "required": false
        },
        {
            "description": "Sets the datasource service port. Use this if you want to use the predefined mysql or postgresql datasource properties. Leave blank if the URL or XA_CONNECTION_URL is set",
            "displayName": "Database service Port",
            "example": "4321",
            "name": "BPMS_SERVICE_PORT",
            "required": false
        },
        {
            "description": "Sets the datasources type. It can be XA or NONXA. For non XA set it to true. Default value is false.",
            "displayName": "Non XA datasource",
            "example": "true",
            "name": "BPMS_NONXA",
            "required": false
        },
        {
            "description": "Sets the datasources jdbc connection url. Note that, if you are using PostgreSQL do not use this field, use the BPMS_SERVICE_HOST and PORT. If using SERVICE_PORT and HOST there is no need to fill this parameter.",
            "displayName": "Datasource Connection URL",
            "example": "jdbc:oracle:thin:@10.1.1.1:1521:jbpm",
            "name": "BPMS_CONNECTION_URL",
            "required": false
        },
        {
            "description": "The predefined driver name, available values are mysql, postgresql or the preferred name for the external driver. For external driver the value passed here should be the same than EXTERNALDB_DRIVER_NAME.",
            "displayName": "Database Driver Name",
            "example": "oracle",
            "name": "BPMS_DRIVER",
            "required": true
        },
        {
            "description": "The predefined driver name installed as a deployment, only required for Oracle, for jdbc driver as deployment append the keywork 'deployment' to the jar name, example: 'deployment.ojdbc6.jar'",
            "displayName": "Quartz Database Driver Module",
            "example": "oracle",
            "name": "QUARTZ_DRIVER_MODULE",
            "required": false
        },
        {
            "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/ExampleDS",
            "displayName": "Database JNDI Name",
            "name": "BPMS_JNDI",
            "required": true,
            "value": "java:jboss/datasources/jbpmDS"
        },
        {
            "description": "Database name",
            "displayName": "Database Name",
            "example": "root",
            "name": "BPMS_DATABASE",
            "required": false
        },
        {
            "description": "Database user name",
            "displayName": "Database Username",
            "from": "user[a-zA-Z0-9]{3}",
            "generate": "expression",
            "name": "BPMS_DATABASE_USERNAME",
            "required": true
        },
        {
            "description": "Database user password",
            "displayName": "Database Password",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "BPMS_DATABASE_PASSWORD",
            "required": true
        },
        {
            "description": "Sets xa-pool/min-pool-size for the configured datasource.",
            "displayName": "Datasource Minimum Pool Size",
            "name": "BPMS_MIN_POOL_SIZE",
            "required": false
        },
        {
            "description": "Sets xa-pool/max-pool-size for the configured datasource.",
            "displayName": "Datasource Maximum Pool Size",
            "name": "BPMS_MAX_POOL_SIZE",
            "required": false
        },
        {
            "description": "An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides a SQLException isValidConnection(Connection e) method to validate if a connection is valid.",
            "displayName": "JDBC Connection Checker class",
            "example": "org.jboss.jca.adapters.jdbc.extensions.oracle.OracleValidConnectionChecker",
            "name": "BPMS_CONNECTION_CHECKER",
            "required": false
        },
        {
            "description": "An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides a boolean isExceptionFatal(SQLException e) method to validate if an exception should be broadcast to all javax.resource.spi.ConnectionEventListener as a connectionErrorOccurred.",
            "displayName": "JDBC Exception Sorter class",
            "example": "org.jboss.jca.adapters.jdbc.extensions.oracle.OracleExceptionSorter",
            "name": "BPMS_EXCEPTION_SORTER",
            "required": false
        },
        {
            "description": "Sets the sql validation method to background-validation, if set to false the validate-on-match method will be used.",
            "displayName": "JDBC background validation",
            "example": "true",
            "name": "BPMS_BACKGROUND_VALIDATION",
            "required": false
        },
        {
            "description": "Defines the interval for the background-validation check for the jdbc connections.",
            "displayName": "JDBC Background Validation Millis",
            "example": "10000",
            "name": "BPMS_BACKGROUND_VALIDATION_MILLIS",
            "required": false
        },
        {
            "description": "ImageStreamTag definition for the image containing the drivers and configuration. i.e custom-driver-image:1.0",
            "displayName": "Drivers Extension Image",
            "name": "EXTENSIONS_IMAGE",
            "required": true,
            "value": "custom-driver-extension:1.0"
        },
        {
            "description": "Namespace within which the ImageStream definition for the image containing the drivers and configuration is located.",
            "displayName": "Drivers ImageStream Namespace",
            "name": "EXTENSIONS_IMAGE_NAMESPACE",
            "required": true,
            "value": "openshift"
        },
        {
            "description": "Full path to the directory within the extensions image where the extensions are located (e.g. install.sh, modules/, etc.)",
            "displayName": "Drivers Image Install Directory",
            "name": "EXTENSIONS_INSTALL_DIR",
            "required": true,
            "value": "/extensions"
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "displayName": "ImageStream Namespace",
            "name": "IMAGE_STREAM_NAMESPACE",
            "required": true,
            "value": "openshift"
        },
        {
            "description": "Maven mirror to use for S2I builds",
            "displayName": "Maven mirror URL",
            "name": "MAVEN_MIRROR_URL",
            "required": false,
            "value": ""
        },
        {
            "description": "Maven additional arguments to use for S2I builds",
            "displayName": "Maven Additional Arguments",
            "name": "MAVEN_ARGS_APPEND",
            "required": false,
            "value": ""
        },
        {
            "description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied.",
            "displayName": "Artifact directory",
            "name": "ARTIFACT_DIR",
            "required": false,
            "value": ""
        },
        {
            "description": "Container memory limit",
            "displayName": "Container Memory Limit",
            "name": "MEMORY_LIMIT",
            "required": false,
            "value": "1Gi"
        }
    ]
}