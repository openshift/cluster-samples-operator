{
    "apiVersion": "v1",
    "kind": "Template",
    "labels": {
        "rhpam": "7.7",
        "template": "rhpam77-prod-immutable-kieserver-amq"
    },
    "message": "A new immutable Red Hat Process Automation Manager KIE server have been created in your project.\nThe username/password needed for accessing the application are stored in \"${CREDENTIALS_SECRET}\" secret as\nKIE_ADMIN_USER and KIE_ADMIN_PWD\n\nYou must create the secret named \"${CREDENTIALS_SECRET}\" containing the KIE_ADMIN_USER and KIE_ADMIN_PWD values and the secret named \"${KIE_SERVER_HTTPS_SECRET}\" containing the ${KIE_SERVER_HTTPS_KEYSTORE} file used for serving secure content.",
    "metadata": {
        "annotations": {
            "description": "Application template for an immutable KIE server in a production environment integrated with ActiveMQ, for Red Hat Process Automation Manager 7.7 - Deprecated",
            "iconClass": "icon-jboss",
            "openshift.io/display-name": "Red Hat Process Automation Manager 7.7 immutable production environment with ActiveMQ",
            "openshift.io/provider-display-name": "Red Hat, Inc.",
            "tags": "rhpam,processserver,jboss,kieserver,immutable,s2i,amq",
            "template.openshift.io/bindable": "false",
            "template.openshift.io/documentation-url": "https://access.redhat.com/documentation/en-us/red_hat_process_automation_manager/7.7/html/deploying_a_red_hat_process_automation_manager_7.7_immutable_server_environment_on_red_hat_openshift_container_platform/",
            "template.openshift.io/long-description": "This template defines resources needed for a immutable production runtime environment for Red Hat Process Automation Manager 7.7, including a source-to-image (S2I) build of your services, application deployment configuration, secure and insecure http communication and persistent volume to store data that needs to survive to a restart. Template for Red Hat OpenShift Container Platform version 3.11. Deprecated since Red Hat Process Automation Manager version 7.5; consider using the Red Hat Business Automation Operator.",
            "template.openshift.io/support-url": "https://access.redhat.com",
            "version": "7.7"
        },
        "name": "rhpam77-prod-immutable-kieserver-amq"
    },
    "objects": [
        {
            "apiVersion": "v1",
            "kind": "ServiceAccount",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-kieserver"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "RoleBinding",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}"
                },
                "name": "${APPLICATION_NAME}-kieserver-edit"
            },
            "roleRef": {
                "name": "edit"
            },
            "subjects": [
                {
                    "kind": "ServiceAccount",
                    "name": "${APPLICATION_NAME}-kieserver"
                }
            ]
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "All the KIE server web server's ports."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-kieserver"
                },
                "name": "${APPLICATION_NAME}-kieserver"
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "port": 8080,
                        "targetPort": 8080
                    },
                    {
                        "name": "https",
                        "port": 8443,
                        "targetPort": 8443
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-kieserver"
                },
                "sessionAffinity": "ClientIP",
                "sessionAffinityConfig": {
                    "clientIP": {
                        "timeoutSeconds": 3600
                    }
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The JGroups ping port for clustering.",
                    "service.alpha.kubernetes.io/tolerate-unready-endpoints": "true"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-kieserver"
                },
                "name": "${APPLICATION_NAME}-kieserver-ping"
            },
            "spec": {
                "clusterIP": "None",
                "ports": [
                    {
                        "name": "ping",
                        "port": 8888,
                        "targetPort": 8888
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-kieserver"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The broker's console and Jolokia port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "${APPLICATION_NAME}-amq-jolokia"
            },
            "spec": {
                "ports": [
                    {
                        "name": "amq-jolokia",
                        "port": 8161,
                        "targetPort": 8161
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-amq"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The broker's AMQP port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "${APPLICATION_NAME}-amq-amqp"
            },
            "spec": {
                "ports": [
                    {
                        "name": "amq-amqp",
                        "port": 5672,
                        "targetPort": 5672
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-amq"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The broker's AMQP SSL port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "${APPLICATION_NAME}-amq-amqp-ssl"
            },
            "spec": {
                "ports": [
                    {
                        "name": "amq-amqp-ssl",
                        "port": 5671,
                        "targetPort": 5671
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-amq"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The broker's MQTT port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "${APPLICATION_NAME}-amq-mqtt"
            },
            "spec": {
                "ports": [
                    {
                        "name": "amq-mqtt",
                        "port": 1883,
                        "targetPort": 1883
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-amq"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The broker's MQTT SSL port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "${APPLICATION_NAME}-amq-mqtt-ssl"
            },
            "spec": {
                "ports": [
                    {
                        "name": "amq-mqtt-ssl",
                        "port": 8883,
                        "targetPort": 8883
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-amq"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The broker's STOMP port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "${APPLICATION_NAME}-amq-stomp"
            },
            "spec": {
                "ports": [
                    {
                        "name": "amq-stomp",
                        "port": 61613,
                        "targetPort": 61613
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-amq"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The broker's STOMP SSL port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "${APPLICATION_NAME}-amq-stomp-ssl"
            },
            "spec": {
                "ports": [
                    {
                        "name": "amq-stomp-ssl",
                        "port": 61612,
                        "targetPort": 61612
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-amq"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The broker's OpenWire port.",
                    "service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-amq-amqp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp\", \"kind\": \"Service\"}]"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "${APPLICATION_NAME}-amq-tcp"
            },
            "spec": {
                "ports": [
                    {
                        "name": "amq-tcp",
                        "port": 61616,
                        "targetPort": 61616
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-amq"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The broker's OpenWire (SSL) port.",
                    "service.alpha.openshift.io/dependencies": "[{\"name\": \"${APPLICATION_NAME}-amq-tcp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-amqp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-amqp-ssl\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-mqtt-ssl\", \"kind\": \"Service\"},{\"name\": \"${APPLICATION_NAME}-amq-stomp-ssl\", \"kind\": \"Service\"}]"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "${APPLICATION_NAME}-amq-tcp-ssl"
            },
            "spec": {
                "ports": [
                    {
                        "name": "amq-tcp-ssl",
                        "port": 61617,
                        "targetPort": 61617
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-amq"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Service",
            "metadata": {
                "annotations": {
                    "description": "The database server's port."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-postgresql"
                },
                "name": "${APPLICATION_NAME}-postgresql"
            },
            "spec": {
                "ports": [
                    {
                        "port": 5432,
                        "targetPort": 5432
                    }
                ],
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-kieserver-http",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for KIE server's http service.",
                    "haproxy.router.openshift.io/balance": "source"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-kieserver"
                },
                "name": "insecure-${APPLICATION_NAME}-kieserver"
            },
            "spec": {
                "host": "${KIE_SERVER_HOSTNAME_HTTP}",
                "port": {
                    "targetPort": "http"
                },
                "to": {
                    "name": "${APPLICATION_NAME}-kieserver"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-kieserver-https",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for KIE server's https service."
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-kieserver"
                },
                "name": "${APPLICATION_NAME}-kieserver"
            },
            "spec": {
                "host": "${KIE_SERVER_HOSTNAME_HTTPS}",
                "port": {
                    "targetPort": "https"
                },
                "tls": {
                    "termination": "passthrough"
                },
                "to": {
                    "name": "${APPLICATION_NAME}-kieserver"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-amq-jolokia-console",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for AMQ Jolokia Service"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "amq-jolokia-console"
            },
            "spec": {
                "tls": {
                    "termination": "passthrough"
                },
                "to": {
                    "kind": "Service",
                    "name": "${APPLICATION_NAME}-amq-jolokia"
                }
            }
        },
        {
            "apiVersion": "v1",
            "id": "${APPLICATION_NAME}-amq-tcp-ssl",
            "kind": "Route",
            "metadata": {
                "annotations": {
                    "description": "Route for AMQ tcp-ssl Service"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "amq-tcp-ssl-external"
            },
            "spec": {
                "tls": {
                    "termination": "passthrough"
                },
                "to": {
                    "kind": "Service",
                    "name": "${APPLICATION_NAME}-amq-tcp-ssl"
                }
            }
        },
        {
            "apiVersion": "v1",
            "kind": "ImageStream",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-kieserver"
                },
                "name": "${APPLICATION_NAME}-kieserver"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "BuildConfig",
            "metadata": {
                "annotations": {
                    "template.alpha.openshift.io/wait-for-ready": "true"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-kieserver",
                    "services.server.kie.org/kie-server-id": "${APPLICATION_NAME}-kieserver"
                },
                "name": "${APPLICATION_NAME}-kieserver"
            },
            "spec": {
                "output": {
                    "to": {
                        "kind": "ImageStreamTag",
                        "name": "${APPLICATION_NAME}-kieserver:latest"
                    }
                },
                "source": {
                    "contextDir": "${CONTEXT_DIR}",
                    "git": {
                        "ref": "${SOURCE_REPOSITORY_REF}",
                        "uri": "${SOURCE_REPOSITORY_URL}"
                    },
                    "type": "Git"
                },
                "strategy": {
                    "sourceStrategy": {
                        "env": [
                            {
                                "name": "KIE_SERVER_CONTAINER_DEPLOYMENT",
                                "value": "${KIE_SERVER_CONTAINER_DEPLOYMENT}"
                            },
                            {
                                "name": "MAVEN_MIRROR_URL",
                                "value": "${MAVEN_MIRROR_URL}"
                            },
                            {
                                "name": "ARTIFACT_DIR",
                                "value": "${ARTIFACT_DIR}"
                            }
                        ],
                        "forcePull": true,
                        "from": {
                            "kind": "ImageStreamTag",
                            "name": "${KIE_SERVER_IMAGE_STREAM_NAME}:${IMAGE_STREAM_TAG}",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}"
                        }
                    },
                    "type": "Source"
                },
                "triggers": [
                    {
                        "github": {
                            "secret": "${GITHUB_WEBHOOK_SECRET}"
                        },
                        "type": "GitHub"
                    },
                    {
                        "generic": {
                            "secret": "${GENERIC_WEBHOOK_SECRET}"
                        },
                        "type": "Generic"
                    },
                    {
                        "imageChange": {},
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "annotations": {
                    "template.alpha.openshift.io/wait-for-ready": "true"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-kieserver",
                    "services.server.kie.org/kie-server-id": "${APPLICATION_NAME}-kieserver"
                },
                "name": "${APPLICATION_NAME}-kieserver"
            },
            "spec": {
                "replicas": 2,
                "revisionHistoryLimit": 10,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-kieserver"
                },
                "strategy": {
                    "rollingParams": {
                        "maxSurge": "100%",
                        "maxUnavailable": 0
                    },
                    "type": "Rolling"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}-kieserver",
                            "service": "${APPLICATION_NAME}-kieserver",
                            "services.server.kie.org/kie-server-id": "${APPLICATION_NAME}-kieserver"
                        },
                        "name": "${APPLICATION_NAME}-kieserver"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "WORKBENCH_SERVICE_NAME",
                                        "value": "${BUSINESS_CENTRAL_SERVICE}"
                                    },
                                    {
                                        "name": "KIE_ADMIN_USER",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "KIE_ADMIN_USER",
                                                "name": "${CREDENTIALS_SECRET}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KIE_ADMIN_PWD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "KIE_ADMIN_PWD",
                                                "name": "${CREDENTIALS_SECRET}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KIE_SERVER_MODE",
                                        "value": "DEVELOPMENT"
                                    },
                                    {
                                        "name": "KIE_MBEANS",
                                        "value": "${KIE_MBEANS}"
                                    },
                                    {
                                        "name": "DROOLS_SERVER_FILTER_CLASSES",
                                        "value": "${DROOLS_SERVER_FILTER_CLASSES}"
                                    },
                                    {
                                        "name": "PROMETHEUS_SERVER_EXT_DISABLED",
                                        "value": "${PROMETHEUS_SERVER_EXT_DISABLED}"
                                    },
                                    {
                                        "name": "KIE_SERVER_BYPASS_AUTH_USER",
                                        "value": "${KIE_SERVER_BYPASS_AUTH_USER}"
                                    },
                                    {
                                        "name": "KIE_SERVER_ID",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "fieldPath": "metadata.labels['services.server.kie.org/kie-server-id']"
                                            }
                                        }
                                    },
                                    {
                                        "name": "KIE_SERVER_ROUTE_NAME",
                                        "value": "insecure-${APPLICATION_NAME}-kieserver"
                                    },
                                    {
                                        "name": "KIE_SERVER_ROUTER_SERVICE",
                                        "value": "${APPLICATION_NAME}-smartrouter"
                                    },
                                    {
                                        "name": "KIE_SERVER_CONTAINER_DEPLOYMENT",
                                        "value": "${KIE_SERVER_CONTAINER_DEPLOYMENT}"
                                    },
                                    {
                                        "name": "MAVEN_REPOS",
                                        "value": "RHPAMCENTR,EXTERNAL"
                                    },
                                    {
                                        "name": "RHPAMCENTR_MAVEN_REPO_SERVICE",
                                        "value": "${BUSINESS_CENTRAL_SERVICE}"
                                    },
                                    {
                                        "name": "RHPAMCENTR_MAVEN_REPO_PATH",
                                        "value": "/maven2/"
                                    },
                                    {
                                        "name": "RHPAMCENTR_MAVEN_REPO_USERNAME",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "KIE_ADMIN_USER",
                                                "name": "${CREDENTIALS_SECRET}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "RHPAMCENTR_MAVEN_REPO_PASSWORD",
                                        "valueFrom": {
                                            "secretKeyRef": {
                                                "key": "KIE_ADMIN_PWD",
                                                "name": "${CREDENTIALS_SECRET}"
                                            }
                                        }
                                    },
                                    {
                                        "name": "EXTERNAL_MAVEN_REPO_ID",
                                        "value": "${MAVEN_REPO_ID}"
                                    },
                                    {
                                        "name": "EXTERNAL_MAVEN_REPO_URL",
                                        "value": "${MAVEN_REPO_URL}"
                                    },
                                    {
                                        "name": "EXTERNAL_MAVEN_REPO_USERNAME",
                                        "value": "${MAVEN_REPO_USERNAME}"
                                    },
                                    {
                                        "name": "EXTERNAL_MAVEN_REPO_PASSWORD",
                                        "value": "${MAVEN_REPO_PASSWORD}"
                                    },
                                    {
                                        "name": "KIE_SERVER_PERSISTENCE_DS",
                                        "value": "${KIE_SERVER_PERSISTENCE_DS}"
                                    },
                                    {
                                        "name": "DATASOURCES",
                                        "value": "RHPAM"
                                    },
                                    {
                                        "name": "RHPAM_DATABASE",
                                        "value": "${KIE_SERVER_POSTGRESQL_DB}"
                                    },
                                    {
                                        "name": "RHPAM_JNDI",
                                        "value": "${KIE_SERVER_PERSISTENCE_DS}"
                                    },
                                    {
                                        "name": "RHPAM_JTA",
                                        "value": "true"
                                    },
                                    {
                                        "name": "RHPAM_DRIVER",
                                        "value": "postgresql"
                                    },
                                    {
                                        "name": "KIE_SERVER_PERSISTENCE_DIALECT",
                                        "value": "org.hibernate.dialect.PostgreSQLDialect"
                                    },
                                    {
                                        "name": "RHPAM_USERNAME",
                                        "value": "${KIE_SERVER_POSTGRESQL_USER}"
                                    },
                                    {
                                        "name": "RHPAM_PASSWORD",
                                        "value": "${KIE_SERVER_POSTGRESQL_PWD}"
                                    },
                                    {
                                        "name": "RHPAM_SERVICE_HOST",
                                        "value": "${APPLICATION_NAME}-postgresql"
                                    },
                                    {
                                        "name": "RHPAM_SERVICE_PORT",
                                        "value": "5432"
                                    },
                                    {
                                        "name": "TIMER_SERVICE_DATA_STORE",
                                        "value": "${APPLICATION_NAME}-postgresql"
                                    },
                                    {
                                        "name": "TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL",
                                        "value": "${TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL}"
                                    },
                                    {
                                        "name": "KIE_SERVER_EXECUTOR_JMS",
                                        "value": "${KIE_SERVER_EXECUTOR_JMS}"
                                    },
                                    {
                                        "name": "KIE_SERVER_EXECUTOR_JMS_TRANSACTED",
                                        "value": "${KIE_SERVER_EXECUTOR_JMS_TRANSACTED}"
                                    },
                                    {
                                        "name": "KIE_SERVER_JMS_QUEUE_REQUEST",
                                        "value": "${KIE_SERVER_JMS_QUEUE_REQUEST}"
                                    },
                                    {
                                        "name": "KIE_SERVER_JMS_QUEUE_RESPONSE",
                                        "value": "${KIE_SERVER_JMS_QUEUE_RESPONSE}"
                                    },
                                    {
                                        "name": "KIE_SERVER_JMS_QUEUE_EXECUTOR",
                                        "value": "${KIE_SERVER_JMS_QUEUE_EXECUTOR}"
                                    },
                                    {
                                        "name": "KIE_SERVER_JMS_ENABLE_SIGNAL",
                                        "value": "${KIE_SERVER_JMS_ENABLE_SIGNAL}"
                                    },
                                    {
                                        "name": "KIE_SERVER_JMS_QUEUE_SIGNAL",
                                        "value": "${KIE_SERVER_JMS_QUEUE_SIGNAL}"
                                    },
                                    {
                                        "name": "KIE_SERVER_JMS_ENABLE_AUDIT",
                                        "value": "${KIE_SERVER_JMS_ENABLE_AUDIT}"
                                    },
                                    {
                                        "name": "KIE_SERVER_JMS_QUEUE_AUDIT",
                                        "value": "${KIE_SERVER_JMS_QUEUE_AUDIT}"
                                    },
                                    {
                                        "name": "KIE_SERVER_JMS_AUDIT_TRANSACTED",
                                        "value": "${KIE_SERVER_JMS_AUDIT_TRANSACTED}"
                                    },
                                    {
                                        "name": "MQ_SERVICE_PREFIX_MAPPING",
                                        "value": "${APPLICATION_NAME}-amq7=AMQ"
                                    },
                                    {
                                        "name": "AMQ_USERNAME",
                                        "value": "${AMQ_USERNAME}"
                                    },
                                    {
                                        "name": "AMQ_PASSWORD",
                                        "value": "${AMQ_PASSWORD}"
                                    },
                                    {
                                        "name": "AMQ_PROTOCOL",
                                        "value": "tcp"
                                    },
                                    {
                                        "name": "AMQ_QUEUES",
                                        "value": "${AMQ_QUEUES}"
                                    },
                                    {
                                        "name": "HTTPS_KEYSTORE_DIR",
                                        "value": "/etc/kieserver-secret-volume"
                                    },
                                    {
                                        "name": "HTTPS_KEYSTORE",
                                        "value": "${KIE_SERVER_HTTPS_KEYSTORE}"
                                    },
                                    {
                                        "name": "HTTPS_NAME",
                                        "value": "${KIE_SERVER_HTTPS_NAME}"
                                    },
                                    {
                                        "name": "HTTPS_PASSWORD",
                                        "value": "${KIE_SERVER_HTTPS_PASSWORD}"
                                    },
                                    {
                                        "name": "KIE_SERVER_MGMT_DISABLED",
                                        "value": "${KIE_SERVER_MGMT_DISABLED}"
                                    },
                                    {
                                        "name": "KIE_SERVER_STARTUP_STRATEGY",
                                        "value": "OpenShiftStartupStrategy"
                                    },
                                    {
                                        "name": "JGROUPS_PING_PROTOCOL",
                                        "value": "openshift.DNS_PING"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_NAME",
                                        "value": "${APPLICATION_NAME}-kieserver-ping"
                                    },
                                    {
                                        "name": "OPENSHIFT_DNS_PING_SERVICE_PORT",
                                        "value": "8888"
                                    },
                                    {
                                        "name": "SSO_URL",
                                        "value": "${SSO_URL}"
                                    },
                                    {
                                        "name": "SSO_OPENIDCONNECT_DEPLOYMENTS",
                                        "value": "ROOT.war"
                                    },
                                    {
                                        "name": "SSO_REALM",
                                        "value": "${SSO_REALM}"
                                    },
                                    {
                                        "name": "SSO_SECRET",
                                        "value": "${KIE_SERVER_SSO_SECRET}"
                                    },
                                    {
                                        "name": "SSO_CLIENT",
                                        "value": "${KIE_SERVER_SSO_CLIENT}"
                                    },
                                    {
                                        "name": "SSO_USERNAME",
                                        "value": "${SSO_USERNAME}"
                                    },
                                    {
                                        "name": "SSO_PASSWORD",
                                        "value": "${SSO_PASSWORD}"
                                    },
                                    {
                                        "name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
                                        "value": "${SSO_DISABLE_SSL_CERTIFICATE_VALIDATION}"
                                    },
                                    {
                                        "name": "SSO_PRINCIPAL_ATTRIBUTE",
                                        "value": "${SSO_PRINCIPAL_ATTRIBUTE}"
                                    },
                                    {
                                        "name": "HOSTNAME_HTTP",
                                        "value": "${KIE_SERVER_HOSTNAME_HTTP}"
                                    },
                                    {
                                        "name": "HOSTNAME_HTTPS",
                                        "value": "${KIE_SERVER_HOSTNAME_HTTPS}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_URL",
                                        "value": "${AUTH_LDAP_URL}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_BIND_DN",
                                        "value": "${AUTH_LDAP_BIND_DN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_BIND_CREDENTIAL",
                                        "value": "${AUTH_LDAP_BIND_CREDENTIAL}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_JAAS_SECURITY_DOMAIN",
                                        "value": "${AUTH_LDAP_JAAS_SECURITY_DOMAIN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_BASE_CTX_DN",
                                        "value": "${AUTH_LDAP_BASE_CTX_DN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_BASE_FILTER",
                                        "value": "${AUTH_LDAP_BASE_FILTER}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_SEARCH_SCOPE",
                                        "value": "${AUTH_LDAP_SEARCH_SCOPE}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
                                        "value": "${AUTH_LDAP_SEARCH_TIME_LIMIT}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE",
                                        "value": "${AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_PARSE_USERNAME",
                                        "value": "${AUTH_LDAP_PARSE_USERNAME}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_USERNAME_BEGIN_STRING",
                                        "value": "${AUTH_LDAP_USERNAME_BEGIN_STRING}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_USERNAME_END_STRING",
                                        "value": "${AUTH_LDAP_USERNAME_END_STRING}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
                                        "value": "${AUTH_LDAP_ROLE_ATTRIBUTE_ID}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLES_CTX_DN",
                                        "value": "${AUTH_LDAP_ROLES_CTX_DN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLE_FILTER",
                                        "value": "${AUTH_LDAP_ROLE_FILTER}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLE_RECURSION",
                                        "value": "${AUTH_LDAP_ROLE_RECURSION}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_DEFAULT_ROLE",
                                        "value": "${AUTH_LDAP_DEFAULT_ROLE}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID",
                                        "value": "${AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN",
                                        "value": "${AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN",
                                        "value": "${AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN}"
                                    },
                                    {
                                        "name": "AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK",
                                        "value": "${AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK}"
                                    },
                                    {
                                        "name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
                                        "value": "${AUTH_ROLE_MAPPER_ROLES_PROPERTIES}"
                                    },
                                    {
                                        "name": "AUTH_ROLE_MAPPER_REPLACE_ROLE",
                                        "value": "${AUTH_ROLE_MAPPER_REPLACE_ROLE}"
                                    }
                                ],
                                "image": "${APPLICATION_NAME}-kieserver",
                                "imagePullPolicy": "Always",
                                "lifecycle": {
                                    "postStart": {
                                        "exec": {
                                            "command": [
                                                "/bin/sh",
                                                "/opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh"
                                            ]
                                        }
                                    },
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/bin/sh",
                                                "/opt/eap/bin/launch/jboss-kie-kieserver-hooks.sh"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/services/rest/server/healthcheck",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 180,
                                    "periodSeconds": 15,
                                    "timeoutSeconds": 2
                                },
                                "name": "${APPLICATION_NAME}-kieserver",
                                "ports": [
                                    {
                                        "containerPort": 8778,
                                        "name": "jolokia",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8888,
                                        "name": "ping",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 36,
                                    "httpGet": {
                                        "path": "/services/rest/server/readycheck",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "periodSeconds": 5,
                                    "timeoutSeconds": 2
                                },
                                "resources": {
                                    "limits": {
                                        "memory": "${KIE_SERVER_MEMORY_LIMIT}"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/kieserver-secret-volume",
                                        "name": "kieserver-keystore-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "serviceAccountName": "${APPLICATION_NAME}-kieserver",
                        "terminationGracePeriodSeconds": 90,
                        "volumes": [
                            {
                                "name": "kieserver-keystore-volume",
                                "secret": {
                                    "secretName": "${KIE_SERVER_HTTPS_SECRET}"
                                }
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}-kieserver"
                            ],
                            "from": {
                                "kind": "ImageStream",
                                "name": "${APPLICATION_NAME}-kieserver"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "annotations": {
                    "template.alpha.openshift.io/wait-for-ready": "true"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-postgresql"
                },
                "name": "${APPLICATION_NAME}-postgresql"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-postgresql"
                },
                "strategy": {
                    "type": "Recreate"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}-postgresql",
                            "service": "${APPLICATION_NAME}-postgresql"
                        },
                        "name": "${APPLICATION_NAME}-postgresql"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "POSTGRESQL_USER",
                                        "value": "${KIE_SERVER_POSTGRESQL_USER}"
                                    },
                                    {
                                        "name": "POSTGRESQL_PASSWORD",
                                        "value": "${KIE_SERVER_POSTGRESQL_PWD}"
                                    },
                                    {
                                        "name": "POSTGRESQL_DATABASE",
                                        "value": "${KIE_SERVER_POSTGRESQL_DB}"
                                    },
                                    {
                                        "name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
                                        "value": "${POSTGRESQL_MAX_PREPARED_TRANSACTIONS}"
                                    }
                                ],
                                "image": "postgresql",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/libexec/check-container",
                                            "--live"
                                        ]
                                    },
                                    "initialDelaySeconds": 120,
                                    "timeoutSeconds": 10
                                },
                                "name": "${APPLICATION_NAME}-postgresql",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/usr/libexec/check-container"
                                        ]
                                    },
                                    "initialDelaySeconds": 5,
                                    "timeoutSeconds": 1
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/pgsql/data",
                                        "name": "${APPLICATION_NAME}-postgresql-pvol"
                                    }
                                ]
                            }
                        ],
                        "terminationGracePeriodSeconds": 60,
                        "volumes": [
                            {
                                "name": "${APPLICATION_NAME}-postgresql-pvol",
                                "persistentVolumeClaim": {
                                    "claimName": "${APPLICATION_NAME}-postgresql-claim"
                                }
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}-postgresql"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "postgresql:${POSTGRESQL_IMAGE_STREAM_TAG}",
                                "namespace": "${POSTGRESQL_IMAGE_STREAM_NAMESPACE}"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "DeploymentConfig",
            "metadata": {
                "annotations": {
                    "template.alpha.openshift.io/wait-for-ready": "true"
                },
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-amq"
                },
                "name": "${APPLICATION_NAME}-amq"
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "${APPLICATION_NAME}-amq"
                },
                "strategy": {
                    "rollingParams": {
                        "maxSurge": "100%",
                        "maxUnavailable": 0
                    },
                    "type": "Rolling"
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "application": "${APPLICATION_NAME}",
                            "deploymentConfig": "${APPLICATION_NAME}-amq",
                            "service": "${APPLICATION_NAME}-amq"
                        },
                        "name": "${APPLICATION_NAME}-amq"
                    },
                    "spec": {
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "AMQ_USER",
                                        "value": "${AMQ_USERNAME}"
                                    },
                                    {
                                        "name": "AMQ_PASSWORD",
                                        "value": "${AMQ_PASSWORD}"
                                    },
                                    {
                                        "name": "AMQ_ROLE",
                                        "value": "${AMQ_ROLE}"
                                    },
                                    {
                                        "name": "AMQ_NAME",
                                        "value": "${APPLICATION_NAME}-broker"
                                    },
                                    {
                                        "name": "AMQ_TRANSPORTS",
                                        "value": "${AMQ_PROTOCOL}"
                                    },
                                    {
                                        "name": "AMQ_QUEUES",
                                        "value": "${AMQ_QUEUES}"
                                    },
                                    {
                                        "name": "AMQ_GLOBAL_MAX_SIZE",
                                        "value": "${AMQ_GLOBAL_MAX_SIZE}"
                                    },
                                    {
                                        "name": "AMQ_REQUIRE_LOGIN",
                                        "value": "true"
                                    },
                                    {
                                        "name": "AMQ_ANYCAST_PREFIX"
                                    },
                                    {
                                        "name": "AMQ_MULTICAST_PREFIX"
                                    },
                                    {
                                        "name": "AMQ_KEYSTORE_TRUSTSTORE_DIR",
                                        "value": "/etc/amq-secret-volume"
                                    },
                                    {
                                        "name": "AMQ_TRUSTSTORE",
                                        "value": "${AMQ_TRUSTSTORE}"
                                    },
                                    {
                                        "name": "AMQ_TRUSTSTORE_PASSWORD",
                                        "value": "${AMQ_TRUSTSTORE_PASSWORD}"
                                    },
                                    {
                                        "name": "AMQ_KEYSTORE",
                                        "value": "${AMQ_KEYSTORE}"
                                    },
                                    {
                                        "name": "AMQ_KEYSTORE_PASSWORD",
                                        "value": "${AMQ_KEYSTORE_PASSWORD}"
                                    }
                                ],
                                "image": "${AMQ_BROKER_IMAGESTREAM_NAME}",
                                "imagePullPolicy": "Always",
                                "name": "${APPLICATION_NAME}-amq",
                                "ports": [
                                    {
                                        "containerPort": 8161,
                                        "name": "console-jolokia",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5672,
                                        "name": "amqp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5671,
                                        "name": "amqp-ssl",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 1883,
                                        "name": "mqtt",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8883,
                                        "name": "mqtt-ssl",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 61613,
                                        "name": "stomp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 61612,
                                        "name": "stomp-ssl",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 61616,
                                        "name": "artemis",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 61617,
                                        "name": "amq-tcp-ssl",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "exec": {
                                        "command": [
                                            "/bin/bash",
                                            "-c",
                                            "/opt/amq/bin/readinessProbe.sh"
                                        ]
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "mountPath": "/etc/amq-secret-volume",
                                        "name": "broker-secret-volume",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "terminationGracePeriodSeconds": 60,
                        "volumes": [
                            {
                                "name": "broker-secret-volume",
                                "secret": {
                                    "secretName": "${AMQ_SECRET}"
                                }
                            }
                        ]
                    }
                },
                "triggers": [
                    {
                        "imageChangeParams": {
                            "automatic": true,
                            "containerNames": [
                                "${APPLICATION_NAME}-amq"
                            ],
                            "from": {
                                "kind": "ImageStreamTag",
                                "name": "${AMQ_BROKER_IMAGESTREAM_NAME}",
                                "namespace": "${AMQ_IMAGE_STREAM_NAMESPACE}"
                            }
                        },
                        "type": "ImageChange"
                    },
                    {
                        "type": "ConfigChange"
                    }
                ]
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "labels": {
                    "application": "${APPLICATION_NAME}",
                    "service": "${APPLICATION_NAME}-postgresql"
                },
                "name": "${APPLICATION_NAME}-postgresql-claim"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${DB_VOLUME_CAPACITY}"
                    }
                }
            }
        }
    ],
    "parameters": [
        {
            "description": "The name for the application.",
            "displayName": "Application Name",
            "name": "APPLICATION_NAME",
            "required": true,
            "value": "myapp"
        },
        {
            "description": "Secret containing the KIE_ADMIN_USER and KIE_ADMIN_PWD values",
            "displayName": "Credentials secret",
            "example": "rhpam-credentials",
            "name": "CREDENTIALS_SECRET",
            "required": true
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat Process Automation Manager images are installed. These ImageStreams are normally installed in the openshift namespace. You need to modify this parameter only if you installed the ImageStream in a different namespace/project. Default is \"openshift\".",
            "displayName": "ImageStream Namespace",
            "name": "IMAGE_STREAM_NAMESPACE",
            "required": true,
            "value": "openshift"
        },
        {
            "description": "The name of the image stream to use for KIE server. Default is \"rhpam-kieserver-rhel8\".",
            "displayName": "KIE Server ImageStream Name",
            "name": "KIE_SERVER_IMAGE_STREAM_NAME",
            "required": true,
            "value": "rhpam-kieserver-rhel8"
        },
        {
            "description": "A named pointer to an image in an image stream. Default is \"7.7.1\".",
            "displayName": "ImageStream Tag",
            "name": "IMAGE_STREAM_TAG",
            "required": true,
            "value": "7.7.1"
        },
        {
            "description": "KIE server persistence datasource (Sets the org.kie.server.persistence.ds system property)",
            "displayName": "KIE Server Persistence DS",
            "name": "KIE_SERVER_PERSISTENCE_DS",
            "required": false,
            "value": "java:/jboss/datasources/rhpam"
        },
        {
            "description": "Namespace in which the ImageStream for the PostgreSQL image is installed. The ImageStream is already installed in the openshift namespace. You need to modify this parameter only if you installed the ImageStream in a different namespace/project. Default is \"openshift\".",
            "displayName": "PostgreSQL ImageStream Namespace",
            "name": "POSTGRESQL_IMAGE_STREAM_NAMESPACE",
            "required": false,
            "value": "openshift"
        },
        {
            "description": "The PostgreSQL image version, which is intended to correspond to the PostgreSQL version. Default is \"10\".",
            "displayName": "PostgreSQL ImageStream Tag",
            "name": "POSTGRESQL_IMAGE_STREAM_TAG",
            "required": false,
            "value": "10"
        },
        {
            "description": "KIE server PostgreSQL database user name",
            "displayName": "KIE Server PostgreSQL Database User",
            "name": "KIE_SERVER_POSTGRESQL_USER",
            "required": false,
            "value": "rhpam"
        },
        {
            "description": "KIE server PostgreSQL database password",
            "displayName": "KIE Server PostgreSQL Database Password",
            "from": "[a-zA-Z]{6}[0-9]{1}!",
            "generate": "expression",
            "name": "KIE_SERVER_POSTGRESQL_PWD",
            "required": false
        },
        {
            "description": "KIE server PostgreSQL database name",
            "displayName": "KIE Server PostgreSQL Database Name",
            "name": "KIE_SERVER_POSTGRESQL_DB",
            "required": false,
            "value": "rhpam7"
        },
        {
            "description": "Allows the PostgreSQL to handle XA transactions.",
            "displayName": "PostgreSQL Database max prepared connections",
            "name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
            "required": true,
            "value": "100"
        },
        {
            "description": "Size of persistent storage for the database volume.",
            "displayName": "Database Volume Capacity",
            "name": "DB_VOLUME_CAPACITY",
            "required": true,
            "value": "1Gi"
        },
        {
            "description": "KIE server mbeans enabled/disabled (Sets the kie.mbeans and kie.scanner.mbeans system properties)",
            "displayName": "KIE MBeans",
            "name": "KIE_MBEANS",
            "required": false,
            "value": "enabled"
        },
        {
            "description": "KIE server class filtering (Sets the org.drools.server.filter.classes system property)",
            "displayName": "Drools Server Filter Classes",
            "name": "DROOLS_SERVER_FILTER_CLASSES",
            "required": false,
            "value": "true"
        },
        {
            "description": "If set to false, the prometheus server extension will be enabled. (Sets the org.kie.prometheus.server.ext.disabled system property)",
            "displayName": "Prometheus Server Extension Disabled",
            "example": "false",
            "name": "PROMETHEUS_SERVER_EXT_DISABLED",
            "required": false
        },
        {
            "description": "Custom hostname for http service route. Leave blank for default hostname, e.g.: insecure-<application-name>-kieserver-<project>.<default-domain-suffix>",
            "displayName": "KIE Server Custom http Route Hostname",
            "name": "KIE_SERVER_HOSTNAME_HTTP",
            "required": false,
            "value": ""
        },
        {
            "description": "Custom hostname for https service route.  Leave blank for default hostname, e.g.: <application-name>-kieserver-<project>.<default-domain-suffix>",
            "displayName": "KIE Server Custom https Route Hostname",
            "name": "KIE_SERVER_HOSTNAME_HTTPS",
            "required": false,
            "value": ""
        },
        {
            "description": "The name of the secret containing the keystore file",
            "displayName": "KIE Server Keystore Secret Name",
            "example": "kieserver-app-secret",
            "name": "KIE_SERVER_HTTPS_SECRET",
            "required": true
        },
        {
            "description": "The name of the keystore file within the secret",
            "displayName": "KIE Server Keystore Filename",
            "name": "KIE_SERVER_HTTPS_KEYSTORE",
            "required": false,
            "value": "keystore.jks"
        },
        {
            "description": "The name associated with the server certificate",
            "displayName": "KIE Server Certificate Name",
            "name": "KIE_SERVER_HTTPS_NAME",
            "required": false,
            "value": "jboss"
        },
        {
            "description": "The password for the keystore and certificate",
            "displayName": "KIE Server Keystore Password",
            "name": "KIE_SERVER_HTTPS_PASSWORD",
            "required": false,
            "value": "mykeystorepass"
        },
        {
            "description": "Allows the KIE server to bypass the authenticated user for task-related operations, for example, queries. (Sets the org.kie.server.bypass.auth.user system property)",
            "displayName": "KIE Server Bypass Auth User",
            "name": "KIE_SERVER_BYPASS_AUTH_USER",
            "required": false,
            "value": "false"
        },
        {
            "description": "KIE Server Container deployment configuration with optional alias. Format: containerId=groupId:artifactId:version|c2(alias2)=g2:a2:v2",
            "displayName": "KIE Server Container Deployment",
            "example": "rhpam-kieserver-library=org.openshift.quickstarts:rhpam-kieserver-library:1.6.0-SNAPSHOT",
            "name": "KIE_SERVER_CONTAINER_DEPLOYMENT",
            "required": true
        },
        {
            "description": "Git source URI for application",
            "displayName": "Git Repository URL",
            "example": "https://github.com/jboss-container-images/rhpam-7-openshift-image.git",
            "name": "SOURCE_REPOSITORY_URL",
            "required": true
        },
        {
            "description": "Git branch/tag reference",
            "displayName": "Git Reference",
            "example": "master",
            "name": "SOURCE_REPOSITORY_REF",
            "required": false
        },
        {
            "description": "Path within Git project to build; empty for root project directory.",
            "displayName": "Context Directory",
            "example": "quickstarts/library-process/library",
            "name": "CONTEXT_DIR",
            "required": false
        },
        {
            "description": "GitHub trigger secret",
            "displayName": "Github Webhook Secret",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "GITHUB_WEBHOOK_SECRET",
            "required": true
        },
        {
            "description": "Generic build trigger secret",
            "displayName": "Generic Webhook Secret",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "GENERIC_WEBHOOK_SECRET",
            "required": true
        },
        {
            "description": "Maven mirror to use for S2I builds",
            "displayName": "Maven mirror URL",
            "name": "MAVEN_MIRROR_URL",
            "required": false
        },
        {
            "description": "The id to use for the maven repository, if set. Default is generated randomly.",
            "displayName": "Maven repository ID",
            "example": "my-repo-id",
            "name": "MAVEN_REPO_ID",
            "required": false
        },
        {
            "description": "Fully qualified URL to a Maven repository.",
            "displayName": "Maven repository URL",
            "name": "MAVEN_REPO_URL",
            "required": false
        },
        {
            "description": "User name for accessing the Maven repository, if required.",
            "displayName": "Maven repository user name",
            "name": "MAVEN_REPO_USERNAME",
            "required": false
        },
        {
            "description": "Password to access the Maven repository, if required.",
            "displayName": "Maven repository password",
            "name": "MAVEN_REPO_PASSWORD",
            "required": false
        },
        {
            "description": "The Service name for the optional Business Central, where it can be reached, to allow service lookups (for example,  maven repo usage), if required.",
            "displayName": "Name of the Business Central service",
            "example": "myapp-rhpamcentr",
            "name": "BUSINESS_CENTRAL_SERVICE",
            "required": false
        },
        {
            "description": "List of directories from which archives will be copied into the deployment folder. If unspecified, all archives in /target will be copied.",
            "displayName": "List of directories from which archives will be copied into the deployment folder",
            "name": "ARTIFACT_DIR",
            "required": false,
            "value": ""
        },
        {
            "description": "Sets refresh-interval for the EJB timer service database-data-store.",
            "displayName": "Timer service data store refresh interval (in milliseconds)",
            "name": "TIMER_SERVICE_DATA_STORE_REFRESH_INTERVAL",
            "required": false,
            "value": "30000"
        },
        {
            "description": "KIE server Container memory limit",
            "displayName": "KIE Server Container Memory Limit",
            "name": "KIE_SERVER_MEMORY_LIMIT",
            "required": false,
            "value": "1Gi"
        },
        {
            "description": "Disable management api and don't allow KIE containers to be deployed/undeployed or started/stopped. (Sets the property org.kie.server.mgmt.api.disabled to true)",
            "displayName": "Disable KIE Server Management",
            "name": "KIE_SERVER_MGMT_DISABLED",
            "required": true,
            "value": "true"
        },
        {
            "description": "Enables the JMS executor, set false to disable it.",
            "displayName": "KIE Server JMS Executor",
            "name": "KIE_SERVER_EXECUTOR_JMS",
            "required": false,
            "value": "true"
        },
        {
            "description": "Enable transactions for JMS executor, disabled by default",
            "displayName": "KIE Server Transacted Executor",
            "name": "KIE_SERVER_EXECUTOR_JMS_TRANSACTED",
            "required": false,
            "value": "false"
        },
        {
            "description": "JNDI name of request queue for JMS. The default value is queue/KIE.SERVER.REQUEST",
            "displayName": "KIE Server JMS Request Queue",
            "example": "queue/KIE.SERVER.REQUEST",
            "name": "KIE_SERVER_JMS_QUEUE_REQUEST",
            "required": false
        },
        {
            "description": "JNDI name of response queue for JMS. The default value is queue/KIE.SERVER.RESPONSE",
            "displayName": "KIE Server JMS Response Queue",
            "example": "queue/KIE.SERVER.RESPONSE",
            "name": "KIE_SERVER_JMS_QUEUE_RESPONSE",
            "required": false
        },
        {
            "description": "JNDI name of response queue for JMS. The default value is queue/KIE.SERVER.RESPONSE",
            "displayName": "KIE Server JMS Executor Queue",
            "example": "queue/KIE.SERVER.EXECUTOR",
            "name": "KIE_SERVER_JMS_QUEUE_EXECUTOR",
            "required": false
        },
        {
            "description": "Enable the Signal configuration through JMS",
            "displayName": "Enable KIE Server JMS Signal Queue",
            "name": "KIE_SERVER_JMS_ENABLE_SIGNAL",
            "required": false,
            "value": "true"
        },
        {
            "description": "JMS queue for signals",
            "displayName": "KIE Server JMS Signal Queue",
            "example": "queue/KIE.SERVER.SIGNAL",
            "name": "KIE_SERVER_JMS_QUEUE_SIGNAL",
            "required": false
        },
        {
            "description": "Enable the Audit logging through JMS",
            "displayName": "Enable KIE Server JMS Audit",
            "name": "KIE_SERVER_JMS_ENABLE_AUDIT",
            "required": false,
            "value": "true"
        },
        {
            "description": "JMS queue for audit logging",
            "displayName": "KIE Server JMS Audit Queue",
            "example": "queue/KIE.SERVER.AUDIT",
            "name": "KIE_SERVER_JMS_QUEUE_AUDIT",
            "required": false
        },
        {
            "description": "determines if JMS session is transacted or not - default true.",
            "displayName": "KIE Server JMS Audit logger transacted",
            "example": "false",
            "name": "KIE_SERVER_JMS_AUDIT_TRANSACTED",
            "required": false
        },
        {
            "description": "User name for standard broker user. It is required for connecting to the broker. If left empty, it will be generated.",
            "displayName": "AMQ Username",
            "from": "user[a-zA-Z0-9]{3}",
            "generate": "expression",
            "name": "AMQ_USERNAME",
            "required": false
        },
        {
            "description": "Password for standard broker user. It is required for connecting to the broker. If left empty, it will be generated.",
            "displayName": "AMQ Password",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "name": "AMQ_PASSWORD",
            "required": false
        },
        {
            "description": "User role for standard broker user.",
            "displayName": "AMQ Role",
            "name": "AMQ_ROLE",
            "required": true,
            "value": "admin"
        },
        {
            "description": "Queue names, separated by commas. These queues will be automatically created when the broker starts. Also, they will be made accessible as JNDI resources in EAP. These are the default queues needed by KIE Server. If using custom Queues, use the same values here as in the KIE_SERVER_JMS_QUEUE_RESPONSE, KIE_SERVER_JMS_QUEUE_REQUEST, KIE_SERVER_JMS_QUEUE_SIGNAL, KIE_SERVER_JMS_QUEUE_AUDIT  and KIE_SERVER_JMS_QUEUE_EXECUTOR parameters.",
            "displayName": "AMQ Queues",
            "name": "AMQ_QUEUES",
            "required": false,
            "value": "queue/KIE.SERVER.REQUEST,queue/KIE.SERVER.RESPONSE,queue/KIE.SERVER.EXECUTOR,queue/KIE.SERVER.SIGNAL,queue/KIE.SERVER.AUDIT"
        },
        {
            "description": "Specifies the maximum amount of memory that message data can consume. If no value is specified, half of the system\u2019s memory is allocated.",
            "displayName": "AMQ Global Max Size",
            "example": "10 gb",
            "name": "AMQ_GLOBAL_MAX_SIZE",
            "required": false
        },
        {
            "description": "The name of a secret containing AMQ SSL related files.",
            "displayName": "AMQ Secret Name",
            "example": "broker-app-secret",
            "name": "AMQ_SECRET",
            "required": true
        },
        {
            "description": "The name of the AMQ SSL Trust Store file.",
            "displayName": "AMQ TRUSTSTORE",
            "example": "broker.ts",
            "name": "AMQ_TRUSTSTORE",
            "required": false
        },
        {
            "description": "The password for the AMQ Trust Store.",
            "displayName": "AMQ TRUSTSTORE PASSWORD",
            "example": "changeit",
            "name": "AMQ_TRUSTSTORE_PASSWORD",
            "required": false
        },
        {
            "description": "The name of the AMQ keystore file.",
            "displayName": "AMQ KEYSTORE",
            "example": "broker.ks",
            "name": "AMQ_KEYSTORE",
            "required": false
        },
        {
            "description": "The password for the AMQ keystore and certificate.",
            "displayName": "AMQ KEYSTORE PASSWORD",
            "example": "changeit",
            "name": "AMQ_KEYSTORE_PASSWORD",
            "required": false
        },
        {
            "description": "Broker protocols to configure, separated by commas. Allowed values are: `openwire`, `amqp`, `stomp` and `mqtt`. Only `openwire` is supported by EAP.",
            "displayName": "AMQ Protocols",
            "name": "AMQ_PROTOCOL",
            "required": false,
            "value": "openwire"
        },
        {
            "description": "AMQ Broker Image",
            "displayName": "AMQ Broker Image",
            "name": "AMQ_BROKER_IMAGESTREAM_NAME",
            "required": true,
            "value": "amq-broker:7.5"
        },
        {
            "description": "Namespace in which the ImageStreams for Red Hat AMQ images are installed. These ImageStreams are normally installed in the openshift namespace. You need to modify this parameter only if you installed the ImageStream in a different namespace/project. Default is \"openshift\".",
            "displayName": "AMQ ImageStream Namespace",
            "name": "AMQ_IMAGE_STREAM_NAMESPACE",
            "required": true,
            "value": "openshift"
        },
        {
            "description": "RH-SSO URL",
            "displayName": "RH-SSO URL",
            "example": "https://rh-sso.example.com/auth",
            "name": "SSO_URL",
            "required": false
        },
        {
            "description": "RH-SSO Realm name",
            "displayName": "RH-SSO Realm name",
            "name": "SSO_REALM",
            "required": false
        },
        {
            "description": "KIE Server RH-SSO Client name",
            "displayName": "KIE Server RH-SSO Client name",
            "name": "KIE_SERVER_SSO_CLIENT",
            "required": false
        },
        {
            "description": "KIE Server RH-SSO Client Secret",
            "displayName": "KIE Server RH-SSO Client Secret",
            "example": "252793ed-7118-4ca8-8dab-5622fa97d892",
            "name": "KIE_SERVER_SSO_SECRET",
            "required": false
        },
        {
            "description": "RH-SSO Realm admin user name for creating the Client if it doesn't exist",
            "displayName": "RH-SSO Realm admin user name",
            "name": "SSO_USERNAME",
            "required": false
        },
        {
            "description": "RH-SSO Realm Admin Password used to create the Client",
            "displayName": "RH-SSO Realm Admin Password",
            "name": "SSO_PASSWORD",
            "required": false
        },
        {
            "description": "RH-SSO Disable SSL Certificate Validation",
            "displayName": "RH-SSO Disable SSL Certificate Validation",
            "name": "SSO_DISABLE_SSL_CERTIFICATE_VALIDATION",
            "required": false,
            "value": "false"
        },
        {
            "description": "RH-SSO Principal Attribute to use as user name.",
            "displayName": "RH-SSO Principal Attribute",
            "name": "SSO_PRINCIPAL_ATTRIBUTE",
            "required": false,
            "value": "preferred_username"
        },
        {
            "description": "LDAP Endpoint to connect for authentication",
            "displayName": "LDAP Endpoint",
            "example": "ldap://myldap.example.com",
            "name": "AUTH_LDAP_URL",
            "required": false
        },
        {
            "description": "Bind DN used for authentication",
            "displayName": "LDAP Bind DN",
            "example": "uid=admin,ou=users,ou=example,ou=com",
            "name": "AUTH_LDAP_BIND_DN",
            "required": false
        },
        {
            "description": "LDAP Credentials used for authentication",
            "displayName": "LDAP Bind Credentials",
            "example": "Password",
            "name": "AUTH_LDAP_BIND_CREDENTIAL",
            "required": false
        },
        {
            "description": "The JMX ObjectName of the JaasSecurityDomain used to decrypt the password.",
            "displayName": "LDAP JAAS Security Domain",
            "name": "AUTH_LDAP_JAAS_SECURITY_DOMAIN",
            "required": false
        },
        {
            "description": "LDAP Base DN of the top-level context to begin the user search.",
            "displayName": "LDAP Base DN",
            "example": "ou=users,ou=example,ou=com",
            "name": "AUTH_LDAP_BASE_CTX_DN",
            "required": false
        },
        {
            "description": "LDAP search filter used to locate the context of the user to authenticate. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. A common example for the search filter is (uid={0}).",
            "displayName": "LDAP Base Search filter",
            "example": "(uid={0})",
            "name": "AUTH_LDAP_BASE_FILTER",
            "required": false
        },
        {
            "description": "The search scope to use.",
            "displayName": "LDAP Search scope",
            "example": "SUBTREE_SCOPE",
            "name": "AUTH_LDAP_SEARCH_SCOPE",
            "required": false
        },
        {
            "description": "The timeout in milliseconds for user or role searches.",
            "displayName": "LDAP Search time limit",
            "example": "10000",
            "name": "AUTH_LDAP_SEARCH_TIME_LIMIT",
            "required": false
        },
        {
            "description": "The name of the attribute in the user entry that contains the DN of the user. This may be necessary if the DN of the user itself contains special characters, backslash for example, that prevent correct user mapping. If the attribute does not exist, the entry\u2019s DN is used.",
            "displayName": "LDAP DN attribute",
            "example": "distinguishedName",
            "name": "AUTH_LDAP_DISTINGUISHED_NAME_ATTRIBUTE",
            "required": false
        },
        {
            "description": "A flag indicating if the DN is to be parsed for the user name. If set to true, the DN is parsed for the user name. If set to false the DN is not parsed for the user name. This option is used together with usernameBeginString and usernameEndString.",
            "displayName": "LDAP Parse username",
            "example": "true",
            "name": "AUTH_LDAP_PARSE_USERNAME",
            "required": false
        },
        {
            "description": "Defines the String which is to be removed from the start of the DN to reveal the user name. This option is used together with usernameEndString and only taken into account if parseUsername is set to true.",
            "displayName": "LDAP Username begin string",
            "name": "AUTH_LDAP_USERNAME_BEGIN_STRING",
            "required": false
        },
        {
            "description": "Defines the String which is to be removed from the end of the DN to reveal the user name. This option is used together with usernameEndString and only taken into account if parseUsername is set to true.",
            "displayName": "LDAP Username end string",
            "name": "AUTH_LDAP_USERNAME_END_STRING",
            "required": false
        },
        {
            "description": "Name of the attribute containing the user roles.",
            "displayName": "LDAP Role attributeID",
            "example": "memberOf",
            "name": "AUTH_LDAP_ROLE_ATTRIBUTE_ID",
            "required": false
        },
        {
            "description": "The fixed DN of the context to search for user roles. This is not the DN where the actual roles are, but the DN where the objects containing the user roles are. For example, in a Microsoft Active Directory server, this is the DN where the user account is.",
            "displayName": "LDAP Roles Search DN",
            "example": "ou=groups,ou=example,ou=com",
            "name": "AUTH_LDAP_ROLES_CTX_DN",
            "required": false
        },
        {
            "description": "A search filter used to locate the roles associated with the authenticated user. The input username or userDN obtained from the login module callback is substituted into the filter anywhere a {0} expression is used. The authenticated userDN is substituted into the filter anywhere a {1} is used. An example search filter that matches on the input username is (member={0}). An alternative that matches on the authenticated userDN is (member={1}).",
            "displayName": "LDAP Role search filter",
            "example": "(memberOf={1})",
            "name": "AUTH_LDAP_ROLE_FILTER",
            "required": false
        },
        {
            "description": "The number of levels of recursion the role search will go below a matching context. Disable recursion by setting this to 0.",
            "displayName": "LDAP Role recursion",
            "example": "1",
            "name": "AUTH_LDAP_ROLE_RECURSION",
            "required": false
        },
        {
            "description": "A role included for all authenticated users",
            "displayName": "LDAP Default role",
            "example": "user",
            "name": "AUTH_LDAP_DEFAULT_ROLE",
            "required": false
        },
        {
            "description": "Name of the attribute within the roleCtxDN context which contains the role name. If the roleAttributeIsDN property is set to true, this property is used to find the role object\u2019s name attribute.",
            "displayName": "LDAP Role name attribute ID",
            "example": "name",
            "name": "AUTH_LDAP_ROLE_NAME_ATTRIBUTE_ID",
            "required": false
        },
        {
            "description": "A flag indicating if the DN returned by a query contains the roleNameAttributeID. If set to true, the DN is checked for the roleNameAttributeID. If set to false, the DN is not checked for the roleNameAttributeID. This flag can improve the performance of LDAP queries.",
            "displayName": "LDAP Role DN contains roleNameAttributeID",
            "example": "false",
            "name": "AUTH_LDAP_PARSE_ROLE_NAME_FROM_DN",
            "required": false
        },
        {
            "description": "Whether or not the roleAttributeID contains the fully-qualified DN of a role object. If false, the role name is taken from the value of the roleNameAttributeId attribute of the context name. Certain directory schemas, such as Microsoft Active Directory, require this attribute to be set to true.",
            "displayName": "LDAP Role Attribute ID is DN",
            "example": "false",
            "name": "AUTH_LDAP_ROLE_ATTRIBUTE_IS_DN",
            "required": false
        },
        {
            "description": "If you are not using referrals, you can ignore this option. When using referrals, this option denotes the attribute name which contains users defined for a certain role, for example member, if the role object is inside the referral. Users are checked against the content of this attribute name. If this option is not set, the check will always fail, so role objects cannot be stored in a referral tree.",
            "displayName": "LDAP Referral user attribute ID",
            "name": "AUTH_LDAP_REFERRAL_USER_ATTRIBUTE_ID_TO_CHECK",
            "required": false
        },
        {
            "description": "When present, the RoleMapping Login Module will be configured to use the provided file. This property defines the fully-qualified file path and name of a properties file or resource which maps roles to replacement roles. The format is original_role=role1,role2,role3",
            "displayName": "RoleMapping rolesProperties file path",
            "name": "AUTH_ROLE_MAPPER_ROLES_PROPERTIES",
            "required": false
        },
        {
            "description": "Whether to add to the current roles, or replace the current roles with the mapped ones. Replaces if set to true.",
            "displayName": "RoleMapping replaceRole property",
            "name": "AUTH_ROLE_MAPPER_REPLACE_ROLE",
            "required": false
        }
    ]
}